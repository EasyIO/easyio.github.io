<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wish a Starbucks Coffee Here!</title>
  
  <subtitle>What is your favorite coffee in Starbucks?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oje.pw/"/>
  <updated>2018-04-04T11:41:17.510Z</updated>
  <id>http://oje.pw/</id>
  
  <author>
    <name>oJe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>♪Panama - Mattleo</title>
    <link href="http://oje.pw/2018/04/03/music-panama-mattleo/"/>
    <id>http://oje.pw/2018/04/03/music-panama-mattleo/</id>
    <published>2018-04-03T02:48:03.000Z</published>
    <updated>2018-04-04T11:41:17.510Z</updated>
    
    <content type="html"><![CDATA[<p><script src="/js/APlayer.min.js"></script></p><p><script src="/js/Meting.min.js"></script></p><div class="aplayer" data-id="34229976" data-server="netease" data-type="song" data-autoplay="false" data-mode="order"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script src=&quot;/js/APlayer.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;/js/Meting.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;div class=&quot;aplayer&quot; data-id=&quot;34229976&quot; d
      
    
    </summary>
    
      <category term="音乐π" scheme="http://oje.pw/categories/%E9%9F%B3%E4%B9%90%CF%80/"/>
    
    
      <category term="Music" scheme="http://oje.pw/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>Linux目录结构</title>
    <link href="http://oje.pw/2018/04/02/linux-directory-tree/"/>
    <id>http://oje.pw/2018/04/02/linux-directory-tree/</id>
    <published>2018-04-02T03:09:50.000Z</published>
    <updated>2018-04-04T05:22:20.977Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:left"></th><th style="text-align:left">可分享的(shareable)</th><th style="text-align:left">不可分享的(unshareable)</th></tr></thead><tbody><tr><td style="text-align:left">不变的(static)</td><td style="text-align:left">/usr (软件放置处)</td><td style="text-align:left">/etc (配置文件)</td></tr><tr><td style="text-align:left">不变的(static)</td><td style="text-align:left">/opt (第三方协力软件)</td><td style="text-align:left">/boot (开机与核心档)</td></tr><tr><td style="text-align:left">可变动的(variable)</td><td style="text-align:left">/var/mail (使用者邮件信箱)</td><td style="text-align:left">/var/run (程序相关)</td></tr><tr><td style="text-align:left">可变动的(variable)</td><td style="text-align:left">/var/spool/news (新闻组)</td><td style="text-align:left">/var/lock (程序相关)</td></tr></tbody></table><a id="more"></a><p><strong> 四种类型 </strong></p><ol><li>可分享的：<br>可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据， 是能够分享给网络上其他主机挂载用的目录；</li><li>不可分享的：<br>自己机器上面运作的装置文件或者是与程序有关的socket文件等， 由于仅与自身机器有关，所以当然就不适合分享给其他主机了。</li><li>不变的：<br>有些数据是不会经常变动的，跟随着distribution而不变动。 例如函式库、文件说明文件、系统管理员所管理的主机服务配置文件等等；</li><li>可变动的：<br>经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等。</li></ol><p>事实上，FHS针对目录树架构仅定义出三层目录底下应该放置什么数据而已，分别是底下这三个目录的定义：</p><ul><li>/ (root, 根目录)：与开机系统有关；</li><li>/usr (unix software resource)：与软件安装/执行有关；</li><li>/var (variable)：与系统运作过程有关。</li></ul><h3 id="根目录-的意义与内容"><a href="#根目录-的意义与内容" class="headerlink" title="根目录 (/) 的意义与内容"></a>根目录 (/) 的意义与内容</h3><p>根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的,同时根目录也与开机/还原/系统修复等动作有关。由于系统开机时需要特定的开机软件、核心文件、开机所需程序、函式库等等文件数据，若系统出现错误时，根目录也必须要包含有能够修复文件系统的程序才行。因为根目录是这么的重要，所以在FHS的要求方面，他希望根目录不要放在非常大的分区，因为越大的分区内你会放入越多的数据，如此一来根目录所在分区就可能会有较多发生错误的机会。<br>因此FHS标准建议：根目录(/)所在分区应该越小越好，且应用程序所安装的软件最好不要与根目录放在同一个分区内，保持根目录越小越好。如此不但效能较佳，根目录所在的文件系统也较不容易发生问题。说白了，就是根目录和Windows的C盘一个样。<br>根据以上原因，FHS认为根目录(/)下应该包含如下子目录</p><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">应放置档案内容</th></tr></thead><tbody><tr><td style="text-align:left">/bin</td><td style="text-align:left">系统有很多放置执行档的目录，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被操作的指令。在/bin底下的指令可以被root与一般帐号所使用，主要有：cat,chmod(修改权限), chown, date, mv, mkdir, cp, bash等等常用的指令。</td></tr><tr><td style="text-align:left">/boot</td><td style="text-align:left">主要放置开机会使用到的档案，包括Linux核心档案以及开机选单与开机所需设定档等等。Linux kernel常用的档名为：vmlinuz ，如果使用的是grub这个开机管理程式，则还会存在/boot/grub/这个目录。</td></tr><tr><td style="text-align:left">/dev</td><td style="text-align:left">在Linux系统上，任何装置与周边设备都是以档案的型态存在于这个目录当中。 只要通过存取这个目录下的某个档案，就等于存取某个装置。比要重要的档案有/dev/null, /dev/zero, /dev/tty , /dev/lp*, / dev/hd*, /dev/sd*等等</td></tr><tr><td style="text-align:left">/etc</td><td style="text-align:left">系统主要的设定档几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。 一般来说，这个目录下的各档案属性是可以让一般使用者查阅的，但是只有root有权力修改。 FHS建议不要放置可执行档(binary)在这个目录中。 比较重要的档案有：/etc/inittab, /etc/init.d/, /etc/modprobe.conf, /etc/X11/, /etc/fstab, /etc/sysconfig/等等。 另外，其下重要的目录有：/etc/init.d/ ：所有服务的预设启动script都是放在这里的，例如要启动或者关闭iptables的话： /etc/init.d/iptables start、/etc/init.d/ iptables stop /etc/xinetd.d/ ：这就是所谓的super daemon管理的各项服务的设定档目录。/etc/X11/ ：与X Window有关的各种设定档都在这里，尤其是xorg.conf或XF86Config这两个X Server的设定档。</td></tr><tr><td style="text-align:left">/home</td><td style="text-align:left">这是系统预设的使用者家目录(home directory)。 在你新增一个一般使用者帐号时，预设的使用者家目录都会规范到这里来。比较重要的是，家目录有两种代号： ~ ：代表当前使用者的家目录，而 ~guest：则代表用户名为guest的家目录。</td></tr><tr><td style="text-align:left">/lib</td><td style="text-align:left">系统的函式库非常的多，而/lib放置的则是在开机时会用到的函式库，以及在/bin或/sbin底下的指令会呼叫的函式库而已 。 什么是函式库呢？妳可以将他想成是外挂，某些指令必须要有这些外挂才能够顺利完成程式的执行之意。 尤其重要的是/lib/modules/这个目录，因为该目录会放置核心相关的模组(驱动程式)。</td></tr><tr><td style="text-align:left">/media</td><td style="text-align:left">media是媒体的英文，顾名思义，这个/media底下放置的就是可移除的装置。 包括软碟、光碟、DVD等等装置都暂时挂载于此。 常见的档名有：/media/floppy, /media/cdrom等等。</td></tr><tr><td style="text-align:left">/mnt</td><td style="text-align:left">如果妳想要暂时挂载某些额外的装置，一般建议妳可以放置到这个目录中。在古早时候，这个目录的用途与/media相同啦。 只是有了/media之后，这个目录就用来暂时挂载用了。</td></tr></tbody></table><p>事实上FHS针对根目录所定义的标准就仅限于上表，不过仍旧有些目录也需要我们了解一下，具体如下：</p><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">应放置档案内容</th></tr></thead><tbody><tr><td style="text-align:left">/lost+found</td><td style="text-align:left">这个目录是使用标准的ext2/ext3档案系统格式才会产生的一个目录，目的在于当档案系统发生错误时，将一些遗失的片段放置到这个目录下。 这个目录通常会在分割槽的最顶层存在，例如你加装一个硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录/disk/lost+found</td></tr><tr><td style="text-align:left">/proc</td><td style="text-align:left">这个目录本身是一个虚拟文件系统(virtual filesystem)喔。 他放置的资料都是在内存当中，例如系统核心、行程资讯(process)（是进程吗?）、周边装置的状态及网络状态等等。因为这个目录下的资料都是在记忆体（内存）当中，所以本身不占任何硬盘空间。比较重要的档案（目录）例如： /proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, /proc/net/*等等。呵呵，是虚拟内存吗[guest]？</td></tr><tr><td style="text-align:left">/sys</td><td style="text-align:left">这个目录其实跟/proc非常类似，也是一个虚拟的档案系统，主要也是记录与核心相关的资讯。 包括目前已载入的核心模组与核心侦测到的硬体装置资讯等等。 这个目录同样不占硬盘容量。</td></tr></tbody></table><p>除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会被挂载， 其他分区则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录下与开机过程有关的目录， 就不能够与根目录放到不同的分区去。那哪些目录不可与根目录分开呢？有底下这些：</p><ul><li>/etc：配置文件</li><li>/bin：重要执行档</li><li>/dev：所需要的装置文件</li><li>/lib：执行档所需的函式库与核心所需的模块</li><li>/sbin：重要的系统执行文件</li></ul><h3 id="usr-的意义与内容"><a href="#usr-的意义与内容" class="headerlink" title="/usr 的意义与内容"></a>/usr 的意义与内容</h3><p>依据FHS的基本定义，/usr里面放置的数据属于可分享的与不可变动的(shareable, static)， 如果你知道如何透过网络进行分区的挂载(例如在服务器篇会谈到的NFS服务器)，那么/usr确实可以分享给局域网络内的其他主机来使用喔。<br>/usr不是user的缩写，其实usr是Unix Software Resource的缩写， 也就是Unix操作系统软件资源所放置的目录，而不是用户的数据啦。这点要注意。 FHS建议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行建立该软件自己独立的目录。<br>因为是所有系统默认的软件(distribution发布者提供的软件)都会放置到/usr底下，因此这个目录有点类似Windows 系统的C:\Windows\ + C:\Program files\这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，/usr的次目录建议有底下这些：</p><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">应放置档案内容</th></tr></thead><tbody><tr><td style="text-align:left">/usr/X11R6/</td><td style="text-align:left">为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且该版的第6次释出之意。</td></tr><tr><td style="text-align:left">/usr/bin/</td><td style="text-align:left">绝大部分的用户可使用指令都放在这里。请注意到他与/bin的不同之处。(是否与开机过程有关)</td></tr><tr><td style="text-align:left">/usr/include/</td><td style="text-align:left">c/c++等程序语言的档头(header)与包含档(include)放置处，当我们以tarball方式 (*.tar.gz 的方式安装软件)安装某些数据时，会使用到里头的许多包含档。</td></tr><tr><td style="text-align:left">/usr/lib/</td><td style="text-align:left">包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本(script)。 某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， 那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统， 那可能会有/usr/lib64/目录产生</td></tr><tr><td style="text-align:left">/usr/local/</td><td style="text-align:left">统管理员在本机自行安装自己下载的软件(非distribution默认提供者)，建议安装到此目录， 这样会比较便于管理。举例来说，你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装于/usr/local/目录下，可与原先的旧版软件有分别啦。 你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include, lib…的次目录</td></tr><tr><td style="text-align:left">/usr/sbin/</td><td style="text-align:left">非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon)</td></tr><tr><td style="text-align:left">/usr/share/</td><td style="text-align:left">放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据， 因为几乎都是文本文件嘛。在此目录下常见的还有这些次目录：/usr/share/man：联机帮助文件,/usr/share/doc：软件杂项的文件说明,/usr/share/zoneinfo：与时区有关的时区文件</td></tr><tr><td style="text-align:left">/usr/src/</td><td style="text-align:left">一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到/usr/src/linux/目录下。</td></tr></tbody></table><h3 id="var-的意义与内容"><a href="#var-的意义与内容" class="headerlink" title="/var 的意义与内容"></a>/var 的意义与内容</h3><p>如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运作后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对常态性变动的文件，包括缓存(cache)、登录档(log file)以及某些软件运作所产生的文件， 包括程序文件(lock file, run file)，或者例如MySQL数据库的文件等等。常见的次目录有：</p><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">应放置档案内容</th></tr></thead><tbody><tr><td style="text-align:left">/var/cache/</td><td style="text-align:left">应用程序本身运作过程中会产生的一些暂存档</td></tr><tr><td style="text-align:left">/var/lib/</td><td style="text-align:left">程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来说，MySQL的数据库放置到/var/lib/mysql/而rpm的数据库则放到/var/lib/rpm去</td></tr><tr><td style="text-align:left">/var/lock/</td><td style="text-align:left">某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该装置时， 就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该装置只会给单一软件所使用。 举例来说，刻录机正在刻录一块光盘，你想一下，会不会有两个人同时在使用一个刻录机烧片？ 如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用</td></tr><tr><td style="text-align:left">/var/log/</td><td style="text-align:left">非常重要。这是登录文件放置的目录。里面比较重要的文件如/var/log/messages, /var/log/wtmp(记录登入者的信息)等。</td></tr><tr><td style="text-align:left">/var/mail/</td><td style="text-align:left">放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中，通常这两个目录是互为链接文件。</td></tr><tr><td style="text-align:left">/var/run/</td><td style="text-align:left">某些程序或者是服务启动后，会将他们的PID放置在这个目录下</td></tr><tr><td style="text-align:left">/var/spool/</td><td style="text-align:left">这个目录通常放置一些队列数据，所谓的“队列”就是排队等待其他程序使用的数据。 这些数据被使用后通常都会被删除。举例来说，系统收到新信会放置到/var/spool/mail/中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到/var/spool/mqueue/中， 等到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到/var/spool/cron/目录中。</td></tr></tbody></table><p>由于FHS仅是定义出最上层(/)及次层(/usr, /var)的目录内容应该要放置的文件或目录数据， 因此，在其他次目录层级内，就可以随开发者自行来配置了。</p><h3 id="目录树-directory-tree"><a href="#目录树-directory-tree" class="headerlink" title="目录树(directory tree)"></a>目录树(directory tree)</h3><p>在Linux底下，所有的文件与目录都是由根目录开始的。那是所有目录与文件的源头, 然后再一个一个的分支下来，因此，我们也称这种目录配置方式为：目录树(directory tree), 这个目录树的主要特性有：<br>目录树的启始点为根目录 (/, root)；<br>每一个目录不止能使用本地端的 partition 的文件系统，也可以使用网络上的 filesystem 。举例来说， 可以利用 Network File System (NFS) 服务器挂载某特定目录等。<br>每一个文件在此目录树中的文件名(包含完整路径)都是独一无二的。<br>如果我们将整个目录树以图的方法来显示，并且将较为重要的文件数据列出来的话，那么目录树架构就如下图所示：<br><img src="/img/linux_tree.png" alt="img" title="目录树架构"></p><h3 id="绝对路径与相对路径"><a href="#绝对路径与相对路径" class="headerlink" title="绝对路径与相对路径"></a>绝对路径与相对路径</h3><p>除了需要特别注意的FHS目录配置外，在文件名部分我们也要特别注意。因为根据档名写法的不同，也可将所谓的路径(path)定义为绝对路径(absolute)与相对路径(relative)。 这两种文件名/路径的写法依据是这样的：<br>绝对路径：<br>由根目录(/)开始写起的文件名或目录名称， 例如 /home/dmtsai/.bashrc；<br>相对路径：<br>相对于目前路径的文件名写法。 例如 ./home/dmtsai 或 <a href="http://www.cnblogs.com/home/dmtsai/" target="_blank" rel="noopener">http://www.cnblogs.com/home/dmtsai/</a> 等等。反正开头不是 / 就属于相对路径的写法<br>而你必须要了解，相对路径是以你当前所在路径的相对位置来表示的。举例来说，你目前在 /home 这个目录下， 如果想要进入 /var/log 这个目录时，可以怎么写呢？<br>命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/<span class="built_in">log</span> (absolute)</span><br><span class="line"><span class="built_in">cd</span> ../var/<span class="built_in">log</span> (relative)</span><br></pre></td></tr></table></figure></p><p>因为你在 /home 底下，所以要回到上一层 (../) 之后，才能继续往 /var 来移动的，特别注意这两个特殊的目录：<br>.  ：代表当前的目录，也可以使用 ./ 来表示；<br>.. ：代表上一层目录，也可以 ../ 来代表。<br>这个 . 与 .. 目录概念是很重要的，你常常会看到 cd .. 或 ./command 之类的指令下达方式， 就是代表上一层与目前所在目录的工作状态。<br>实例1：如何先进入/var/spool/mail/目录，再进入到/var/spool/cron/目录内？<br>命令：</p><pre><code class="bash"><span class="built_in">cd</span> /var/spool/mail<span class="built_in">cd</span> ../cron</code></pre><p>说明：<br>由于/var/spool/mail与/var/spool/cron是同样在/var/spool/目录中。如此就不需要在由根目录开始写起了。这个相对路径是非常有帮助的，尤其对于某些软件开发商来说。 一般来说，软件开发商会将数据放置到/usr/local/里面的各相对目录。 但如果用户想要安装到不同目录呢？就得要使用相对路径。<br>实例2：网络文件常常提到类似./run.sh之类的数据，这个指令的意义为何？<br>说明：<br>由于指令的执行需要变量的支持，若你的执行文件放置在本目录，并且本目录并非正规的执行文件目录(/bin, /usr/bin等为正规)，此时要执行指令就得要严格指定该执行档。./代表本目录的意思，所以./run.sh代表执行本目录下， 名为run.sh的文件</p>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;可分享的(shareable)&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;不可分享的(unshareable)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不变的(static)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/usr (软件放置处)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/etc (配置文件)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不变的(static)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/opt (第三方协力软件)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/boot (开机与核心档)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可变动的(variable)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/var/mail (使用者邮件信箱)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/var/run (程序相关)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可变动的(variable)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/var/spool/news (新闻组)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;/var/lock (程序相关)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Cookie参数简介</title>
    <link href="http://oje.pw/2018/04/01/web-cookie/"/>
    <id>http://oje.pw/2018/04/01/web-cookie/</id>
    <published>2018-04-01T12:10:46.000Z</published>
    <updated>2018-04-04T05:13:19.236Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">简介</th></tr></thead><tbody><tr><td style="text-align:center">Domain</td><td style="text-align:center">设置关联cookie的域名</td></tr><tr><td style="text-align:center">Expires</td><td style="text-align:center">通过给定一个过期时间来创建一个持久化cookie</td></tr><tr><td style="text-align:center">httponly</td><td style="text-align:center">避免cookie被js访问</td></tr><tr><td style="text-align:center">name</td><td style="text-align:center">cookie名称</td></tr><tr><td style="text-align:center">path</td><td style="text-align:center">关联到cookie的路径，默认为 /</td></tr><tr><td style="text-align:center">value</td><td style="text-align:center">值</td></tr><tr><td style="text-align:center">secure</td><td style="text-align:center">用于指定cookie需要通过安全socket曾连接传递</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;参数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;简介&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Cookie" scheme="http://oje.pw/tags/Cookie/"/>
    
      <category term="Web" scheme="http://oje.pw/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite组件简介</title>
    <link href="http://oje.pw/2018/04/01/cs-burpsuite/"/>
    <id>http://oje.pw/2018/04/01/cs-burpsuite/</id>
    <published>2018-04-01T12:10:33.000Z</published>
    <updated>2018-04-04T05:14:44.747Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">组件</th><th style="text-align:left">简介</th></tr></thead><tbody><tr><td style="text-align:center">Proxy</td><td style="text-align:left">是一个拦截HTTP/S的代理服务器，作为一个在浏览器和目标应用程序之间的中间人，允许你拦截，查看，修改在两个方向上的原始数据流</td></tr><tr><td style="text-align:center">Spider</td><td style="text-align:left">是一个应用智能感应的网络爬虫，它能完整的枚举应用程序的内容和功能</td></tr><tr><td style="text-align:center">Scanner</td><td style="text-align:left">是一个高级的工具，执行后，它能自动地发现web 应用程序的安全漏洞</td></tr><tr><td style="text-align:center">Intruder</td><td style="text-align:left">是一个定制的高度可配置的工具，对web应用程序进行自动化攻击，如：枚举标识符，收集有用的数据，以及使用fuzzing 技术探测常规漏洞</td></tr><tr><td style="text-align:center">Repeater</td><td style="text-align:left">是一个靠手动操作来补发单独的HTTP 请求，并分析应用程序响应的工具</td></tr><tr><td style="text-align:center">Sequencer</td><td style="text-align:left">是一个用来分析那些不可预知的应用程序会话令牌和重要数据项的随机性的工具</td></tr><tr><td style="text-align:center">Decoder</td><td style="text-align:left">是一个进行手动执行或对应用程序数据者智能解码编码的工具</td></tr><tr><td style="text-align:center">Comparer</td><td style="text-align:left">是一个实用的工具，通常是通过一些相关的请求和响应得到两项数据的一个可视化的“差异”</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;组件&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;简介&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-a
      
    
    </summary>
    
      <category term="安全π" scheme="http://oje.pw/categories/%E5%AE%89%E5%85%A8%CF%80/"/>
    
    
      <category term="BurpSuite" scheme="http://oje.pw/tags/BurpSuite/"/>
    
      <category term="网络安全" scheme="http://oje.pw/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vim</title>
    <link href="http://oje.pw/2018/04/01/linux-vim/"/>
    <id>http://oje.pw/2018/04/01/linux-vim/</id>
    <published>2018-04-01T11:43:23.000Z</published>
    <updated>2018-04-04T05:33:56.282Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/vim.png" alt="vim"><br><a id="more"></a></p><h3 id="一般模式-删除、复制与粘贴类命令"><a href="#一般模式-删除、复制与粘贴类命令" class="headerlink" title="一般模式 : 删除、复制与粘贴类命令"></a>一般模式 : 删除、复制与粘贴类命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x,X                      x为向后删除一个字符，X为先前删除一个字符</span><br><span class="line">nx(n代表数字)             向后删除n个字符</span><br><span class="line">dd                       删除当前行</span><br><span class="line">D                        删除当前行所有字符，试成为空行</span><br><span class="line">ndd(n代表数字)            删除光标所在行的向下n列</span><br><span class="line">d1G                      删除光标所在行到第一行的所有数据</span><br><span class="line">dG                       删除光标所在行到最后一行的所有数据</span><br><span class="line">yy                       复制光标所在行</span><br><span class="line">y1G                      复制光标所在行到第一行的所有数据</span><br><span class="line">yG                       复制光标所在行到最后一行的所有数据</span><br><span class="line">ynj(n代表数字)            复制光标所在行向下n+1行</span><br><span class="line">dnj(n代表数字)            删除光标所在行向下n+1行</span><br><span class="line">p,P                      p为复制的数据粘贴在光标的下一行，P为复制的数据粘贴在光标的上一行</span><br><span class="line">J                        将光标所在行与下一行的数据结合成一行</span><br><span class="line">u                        恢复前一个动作(undo)</span><br></pre></td></tr></table></figure><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i,I    i为在当前光标所在处插入输入的文字，I为在光标所在行第一个非空字符插入输入的文字</span><br><span class="line">a,A    a为在当前光标所在处下一个字符插入输入的文字，A为在光标所在行</span><br><span class="line">       最后一个字符的下一个字符处插入输入的文字</span><br><span class="line">o,O    o为在光标所在行的下一行行首开始插入字符，O为在光标所在行的上一行行首开始插入字符</span><br><span class="line">r,R    r为替换光标所在那一个字符，R为一直替换光标所指的文字，直到退出</span><br><span class="line">Esc    退出，回到一般模式</span><br></pre></td></tr></table></figure><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">h                        光标向左移一个字符</span><br><span class="line">j                        光标向下移一个字符</span><br><span class="line">k                        光标向上移一个字符</span><br><span class="line">l                        光标向右移一个字符</span><br><span class="line">Ctrl+f                   屏幕向下翻一页</span><br><span class="line">Ctrl+b                   屏幕向上翻一页</span><br><span class="line">Ctrl+d                   屏幕向下翻半页</span><br><span class="line">Ctrl+u                   屏幕向上翻半页</span><br><span class="line">+                        光标移动到下一行的第一个非空字符</span><br><span class="line">-                        光标移动到当前行的第一个非空字符</span><br><span class="line">n空格(n代表数字)          光标向当前行向右移动n个字符</span><br><span class="line">0(数字0)                 光标移动到当前行的第一个字符(可以为空字符,注意与-区分）</span><br><span class="line">$                        光标移动到当前行的最后一个字符(可以为空字符,注意与-区分）</span><br><span class="line">H                        光标移动到当前屏幕最上方的那一行的第一个非空字符</span><br><span class="line">M                        光标移动到当前屏幕最中间那一行的第一个非空字符</span><br><span class="line">L                        光标移动到当前屏幕最下方的那一行的第一个非空字符</span><br><span class="line">G                        光标移动到该文章最后一行的第一个非空字符</span><br><span class="line">nG(n代表数字)             光标移动到该文章第n行的第一个非空字符</span><br><span class="line">n                        光标从当前行向下移动n行的第一个非空字符</span><br><span class="line">/word                    在光标之后查找word字符串</span><br><span class="line">?word                    在光标之前查找word字符串</span><br><span class="line">:s/word1/word2/g         在光标当前行查找word1，并替换成word2</span><br><span class="line">:n1,n2s/word1/word2/g    在第n1行与第n2行之间查找word1，并替换成word2</span><br><span class="line">:%s/word1/word2/g        整个文章查找word1，并替换成word2</span><br><span class="line">:w                       将编辑的数据保存到硬盘文件中</span><br><span class="line">:w [filename]            将编辑后的数据保存到硬盘的另一个文件中</span><br><span class="line">:r [filename]            在编辑数据时，读入另一个文件中的数据，</span><br><span class="line">                         即将filename文件中的内容加到光标所在行下一行</span><br><span class="line">:wq或:x                  保存并退出</span><br><span class="line">:q                       退出，适用于未修改的文件</span><br><span class="line">:q!                      强制退出，适用于修改文件后不保存退出</span><br><span class="line">:<span class="built_in">set</span> nu                  显示行号</span><br><span class="line">:<span class="built_in">set</span> nonu                取消行号</span><br><span class="line">:n1,n2 w [filename]      将n1到n2行的内容保存到名为filename的文件中</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/vim.png&quot; alt=&quot;vim&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Vim" scheme="http://oje.pw/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu设置应用在后台运行服务</title>
    <link href="http://oje.pw/2018/04/01/linux-ubuntu-bakcgroup/"/>
    <id>http://oje.pw/2018/04/01/linux-ubuntu-bakcgroup/</id>
    <published>2018-04-01T11:36:00.000Z</published>
    <updated>2018-04-04T05:31:04.304Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一:</span></span><br><span class="line">$ setsid python xxx.py &gt;log.txt</span><br><span class="line">$ ps -aux </span><br><span class="line">$ ps -ef |grep run.py</span><br><span class="line">$ <span class="built_in">kill</span> -9 [PID]</span><br><span class="line"><span class="comment"># 方法二:</span></span><br><span class="line">$ nohup python run.py &gt;log.txt</span><br><span class="line"><span class="comment"># 将打印内容重定向到/dev/null中，相当于直接丢弃，任何地方都找不到打印的内容</span></span><br><span class="line">$ python your_script.py &gt;&gt; /dev/null </span><br><span class="line"><span class="comment"># 如果又要查看打印的内容，怎么让它输出(还在运行)？</span></span><br><span class="line"><span class="comment"># 将输出重定向到当前目录下的log.txt文件中</span></span><br><span class="line">$ python your_script.py &gt;&gt; log.txt</span><br><span class="line">$ cat log.txt  <span class="comment"># 查看截止目前所有的日志内容</span></span><br><span class="line">$ tail log.txt <span class="comment"># 查看截止目前，最后10行日志</span></span><br><span class="line">$ tail -f log.txt <span class="comment"># 从最后10行开始滚动输出，准实时刷新</span></span><br><span class="line">$ tail -n 100 -f log.txt  <span class="comment"># 从最后100行开始滚动输出</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://oje.pw/tags/Ubuntu/"/>
    
      <category term="Python" scheme="http://oje.pw/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CentOS clean boot</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-clean-boot/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-clean-boot/</id>
    <published>2018-04-01T11:29:42.000Z</published>
    <updated>2018-04-04T05:03:11.483Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.使用如下命令查询目前安装在系统里的全部内核（kernel）</span></span><br><span class="line">$ rpm -q kernel</span><br><span class="line"><span class="comment"># 2.查询当前使用的内核（kernel）版本</span></span><br><span class="line">$ uname -a</span><br><span class="line"><span class="comment"># 3.删除除当前内核以外所有的内核</span></span><br><span class="line">$ rpm -e <span class="string">'内核版本号'</span></span><br><span class="line">$ rpm -e kernel-2.6.32-358.el6.i686</span><br><span class="line"><span class="comment"># 4.使用命令df -h 查看/boot分区的使用情况。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://oje.pw/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="http://oje.pw/2018/04/01/maven/"/>
    <id>http://oje.pw/2018/04/01/maven/</id>
    <published>2018-04-01T11:14:27.000Z</published>
    <updated>2018-04-04T05:25:29.124Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建Maven的普通java项目</span></span><br><span class="line">$ mvn archetype:create -DgroupId=packageName -DartifactId=projectName </span><br><span class="line"><span class="comment"># 2.创建Maven的Web项目</span></span><br><span class="line">$ mvn archetype:create -DgroupId=packageName -DartifactId=</span><br><span class="line">webappName-DarchetypeArtifactId=maven-archetype-webapp </span><br><span class="line"><span class="comment"># 3.编译源代码： </span></span><br><span class="line">$ mvn compile </span><br><span class="line"><span class="comment"># 4.编译测试代码：</span></span><br><span class="line">$ mvn <span class="built_in">test</span>-compile </span><br><span class="line"><span class="comment"># 5.运行测试：</span></span><br><span class="line">$ mvn <span class="built_in">test</span> </span><br><span class="line"><span class="comment"># 6.产生site：</span></span><br><span class="line">$ mvn site </span><br><span class="line"><span class="comment"># 7.打包：</span></span><br><span class="line">$ mvn package </span><br><span class="line"><span class="comment"># 8.在本地Repository中安装jar：</span></span><br><span class="line">$ mvn install </span><br><span class="line"><span class="comment"># 9.清除产生的项目：</span></span><br><span class="line">$ mvn clean </span><br><span class="line"><span class="comment"># 10.生成eclipse项目：</span></span><br><span class="line">$ mvn eclipse:eclipse </span><br><span class="line"><span class="comment"># 11.生成idea项目：</span></span><br><span class="line">$ mvn idea:idea </span><br><span class="line"><span class="comment"># 12.组合使用goal命令，如只打包不测试：</span></span><br><span class="line">$ mvn -Dtest package </span><br><span class="line"><span class="comment"># 13.编译测试的内容：</span></span><br><span class="line">$ mvn <span class="built_in">test</span>-compile </span><br><span class="line"><span class="comment"># 14.只打jar包: </span></span><br><span class="line">$ mvn jar:jar </span><br><span class="line"><span class="comment"># 15.只测试而不编译，也不测试编译：</span></span><br><span class="line">$ mvn <span class="built_in">test</span> -skipping compile -skipping <span class="built_in">test</span>-compile </span><br><span class="line">( -skipping 的灵活运用，当然也可以用于其他组合命令) </span><br><span class="line"><span class="comment"># 16.清除eclipse的一些系统设置:</span></span><br><span class="line">$ mvn eclipse:clean</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 源更换</span></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line"> &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line"> &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line"> &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line"> &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pom.xml</span></span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  <span class="comment"># snapshot 快照</span></span><br><span class="line">  <span class="comment"># alpha 内部测试</span></span><br><span class="line">  <span class="comment"># beta 公测</span></span><br><span class="line">  <span class="comment"># release 稳定</span></span><br><span class="line">  <span class="comment"># GA 正式发布</span></span><br><span class="line">&lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line">    <span class="comment">#war zip pom   </span></span><br><span class="line">    &lt;profile&gt;   </span><br><span class="line">        &lt;id&gt;jdk1.8&lt;/id&gt;    </span><br><span class="line">        &lt;activation&gt;   </span><br><span class="line">            &lt;activeByDefault&gt;<span class="literal">true</span>&lt;/activeByDefault&gt;    </span><br><span class="line">            &lt;jdk&gt;1.8&lt;/jdk&gt;   </span><br><span class="line">        &lt;/activation&gt;    </span><br><span class="line">        &lt;properties&gt;   </span><br><span class="line">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;    </span><br><span class="line">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;    </span><br><span class="line">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;   </span><br><span class="line">        &lt;/properties&gt;   </span><br><span class="line">    &lt;/profile&gt;  ﻿​</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 1.创建Maven的普通java项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn archetype:create -DgroupId=packageName -DartifactId=projectName &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 2.创建Maven的Web项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn archetype:create -DgroupId=packageName -DartifactId=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	webappName-DarchetypeArtifactId=maven-archetype-webapp &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 3.编译源代码： &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn compile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 4.编译测试代码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;-compile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 5.运行测试：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 6.产生site：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn site &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 7.打包：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn package &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 8.在本地Repository中安装jar：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn install &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 9.清除产生的项目：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn clean &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 10.生成eclipse项目：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn eclipse:eclipse &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 11.生成idea项目：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn idea:idea &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 12.组合使用goal命令，如只打包不测试：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn -Dtest package &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 13.编译测试的内容：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;-compile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 14.只打jar包: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn jar:jar &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 15.只测试而不编译，也不测试编译：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; -skipping compile -skipping &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;-compile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;( -skipping 的灵活运用，当然也可以用于其他组合命令) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 16.清除eclipse的一些系统设置:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mvn eclipse:clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Java" scheme="http://oje.pw/tags/Java/"/>
    
      <category term="Maven" scheme="http://oje.pw/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Docker基础命令</title>
    <link href="http://oje.pw/2018/04/01/docker-command/"/>
    <id>http://oje.pw/2018/04/01/docker-command/</id>
    <published>2018-04-01T11:09:23.000Z</published>
    <updated>2018-04-04T05:15:14.634Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 镜像</span></span><br><span class="line">$ docker images <span class="comment"># 查看镜像</span></span><br><span class="line">$ docker pull</span><br><span class="line">$ docker inspect id <span class="comment"># 详细信息</span></span><br><span class="line">$ docker search XXX <span class="comment"># 搜索</span></span><br><span class="line">$ docker rmi XXX <span class="comment"># 删除</span></span><br><span class="line">$ docker ps -a <span class="comment"># 查看所有容器</span></span><br><span class="line">$ docker commit -a 作者 -m提交信息 -p 提交时暂停容器运行</span><br><span class="line">$ docker save -o ubuntu_14.04.tar ubuntu:14.04 <span class="comment"># 存出镜像</span></span><br><span class="line">$ docker load &lt;ubuntu_14.04.tar <span class="comment"># 载入镜像</span></span><br><span class="line"><span class="comment"># 容器</span></span><br><span class="line">$ docker create it XXX <span class="comment"># 新建容器</span></span><br><span class="line">$ docker run </span><br><span class="line">$ docker stop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Docker" scheme="http://oje.pw/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu常用命令</title>
    <link href="http://oje.pw/2018/04/01/linux-ubuntu-command/"/>
    <id>http://oje.pw/2018/04/01/linux-ubuntu-command/</id>
    <published>2018-04-01T11:08:08.000Z</published>
    <updated>2018-04-04T05:33:11.921Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文件-文件夹管理"><a href="#文件-文件夹管理" class="headerlink" title="文件/文件夹管理"></a>文件/文件夹管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ls <span class="comment"># 列出当前目录文件（不包括隐含文件） </span></span><br><span class="line">$ ls -a <span class="comment"># 列出当前目录文件（包括隐含文件） </span></span><br><span class="line">$ ls -l <span class="comment"># 列出当前目录下文件的详细信息 </span></span><br><span class="line">$ <span class="built_in">cd</span> .. <span class="comment"># 回当前目录的上一级目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> - <span class="comment"># 回上一次所在的目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> ~ 或 <span class="built_in">cd</span> <span class="comment"># 回当前用户的宿主目录 </span></span><br><span class="line">$ mk 目录名 <span class="comment"># 创建一个目录 </span></span><br><span class="line">$ rmdir 空目录名 <span class="comment"># 删除一个空目录 </span></span><br><span class="line">$ rm 文件名 文件名 <span class="comment"># 删除一个文件或多个文件 </span></span><br><span class="line">$ rm -rf 非空目录名 <span class="comment"># 删除一个非空目录下的一切 </span></span><br><span class="line">$ mv 路经/文件 <span class="comment"># /路经/文件移动相对路经下的文件到绝对路经下 </span></span><br><span class="line">$ mv 文件名 新名称 <span class="comment"># 在当前目录下改名 </span></span><br><span class="line">$ find 路经 -name “字符串” <span class="comment"># 查找路经所在范围内满足字符串匹配的文件和目录</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk fdisk -l <span class="comment"># 查看系统分区信息 </span></span><br><span class="line">$ fdisk fdisk /dev/sdb <span class="comment"># 为一块新的SCSI硬盘进行分区 </span></span><br><span class="line">$ chown chown root /home <span class="comment"># 把/home的属主改成root用户 </span></span><br><span class="line">$ chgrp chgrp root /home <span class="comment"># 把/home的属组改成root组 </span></span><br><span class="line">$ Useradd <span class="comment"># 创建一个新的用户 </span></span><br><span class="line">$ Groupadd 组名 <span class="comment"># 创建一个新的组 </span></span><br><span class="line">$ Passwd 用户名 <span class="comment"># 为用户创建密码 </span></span><br><span class="line">$ Passwd -d用户名 <span class="comment"># 删除用户密码也能登陆 </span></span><br><span class="line">$ Passwd -S用户名 <span class="comment"># 查询账号密码 </span></span><br><span class="line">$ Usermod -l 新用户名 老用户名 <span class="comment"># 为用户改名 </span></span><br><span class="line">$ Userdel–r 用户名 <span class="comment"># 删除用户一切 </span></span><br><span class="line">$ service [servicename] start/stop/restart <span class="comment"># 系统服务控制操作 </span></span><br><span class="line">$ /etc/init.d/[servicename] start/stop/restart <span class="comment"># 系统服务控制操作 </span></span><br><span class="line">$ uname -a <span class="comment"># 查看内核版本 </span></span><br><span class="line">$ cat /etc/issue <span class="comment"># 查看ubuntu版本 </span></span><br><span class="line">$ lsusb <span class="comment"># 查看usb设备 </span></span><br><span class="line">$ sudo ethtool eth0 <span class="comment"># 查看网卡状态 </span></span><br><span class="line">$ cat /proc/cpuinfo <span class="comment"># 查看cpu信息 </span></span><br><span class="line">$ lshw <span class="comment"># 查看当前硬件信息 </span></span><br><span class="line">$ sudo fdisk -l <span class="comment"># 查看磁盘信息 </span></span><br><span class="line">$ df -h <span class="comment"># 查看硬盘剩余空间 </span></span><br><span class="line">$ free -m <span class="comment"># 查看当前的内存使用情况 </span></span><br><span class="line">$ ps -A <span class="comment"># 查看当前有哪些进程 </span></span><br><span class="line">$ <span class="built_in">kill</span> <span class="comment"># 进程号(就是ps -A中的第一列的数字)或者 killall 进程名( 杀死一个进程) </span></span><br><span class="line">$ <span class="built_in">kill</span> -9 进程号 <span class="comment"># 强制杀死一个进程 </span></span><br><span class="line">$ reboot Init 6 <span class="comment"># 重启LINUX系统 </span></span><br><span class="line">$ Halt Init 0 Shutdown –h now <span class="comment"># 关闭LINUX系统</span></span><br></pre></td></tr></table></figure><h3 id="打包-解压"><a href="#打包-解压" class="headerlink" title="打包/解压"></a>打包/解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar -c 创建包 –x 释放包 -v 显示命令过程 –z 代表压缩包 </span><br><span class="line">$ tar –cvf benet.tar /home/benet <span class="comment"># 把/home/benet目录打包 </span></span><br><span class="line">$ tar –zcvf benet.tar.gz /mnt <span class="comment"># 把目录打包并压缩 </span></span><br><span class="line">$ tar –zxvf benet.tar.gz <span class="comment"># 压缩包的文件解压恢复 </span></span><br><span class="line">$ tar –jxvf benet.tar.bz2 <span class="comment"># 解压缩</span></span><br></pre></td></tr></table></figure><h3 id="make编译"><a href="#make编译" class="headerlink" title="make编译"></a>make编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ make <span class="comment"># 编译 </span></span><br><span class="line">$ make install <span class="comment"># 安装编译好的源码包</span></span><br></pre></td></tr></table></figure><h3 id="apt命令"><a href="#apt命令" class="headerlink" title="apt命令"></a>apt命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ apt-cache search package <span class="comment"># 搜索包 </span></span><br><span class="line">$ apt-cache show package <span class="comment"># 获取包的相关信息，如说明、大小、版本等 </span></span><br><span class="line">$ sudo apt-get install package <span class="comment"># 安装包 </span></span><br><span class="line">$ sudo apt-get install package - - reinstall <span class="comment"># 重新安装包 </span></span><br><span class="line">$ sudo apt-get -f install <span class="comment"># 修复安装”-f = –fix-missing” </span></span><br><span class="line">$ sudo apt-get remove package <span class="comment"># 删除包 </span></span><br><span class="line">$ sudo apt-get remove package - - purge <span class="comment"># 删除包，包括删除配置文件等 </span></span><br><span class="line">$ sudo apt-get update <span class="comment"># 更新源 </span></span><br><span class="line">$ sudo apt-get upgrade <span class="comment"># 更新已安装的包 </span></span><br><span class="line">$ sudo apt-get dist-upgrade <span class="comment"># 升级系统 </span></span><br><span class="line">$ sudo apt-get dselect-upgrade <span class="comment"># 使用 dselect 升级 </span></span><br><span class="line">$ apt-cache depends package <span class="comment"># 了解使用依赖 </span></span><br><span class="line">$ apt-cache rdepends package <span class="comment"># 是查看该包被哪些包依赖 </span></span><br><span class="line">$ sudo apt-get build-dep package <span class="comment"># 安装相关的编译环境 </span></span><br><span class="line">$ apt-get <span class="built_in">source</span> package <span class="comment"># 下载该包的源代码 </span></span><br><span class="line">$ sudo apt-get clean &amp;&amp; sudo apt-get autoclean <span class="comment"># 清理无用的包 </span></span><br><span class="line">$ sudo apt-get check <span class="comment"># 检查是否有损坏的依赖 </span></span><br><span class="line">$ sudo apt-get clean <span class="comment"># 清理所有软件缓存（即缓存在/var/cache/apt/archives目录里的deb包）</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;文件-文件夹管理&quot;&gt;&lt;a href=&quot;#文件-文件夹管理&quot; class=&quot;headerlink&quot; title=&quot;文件/文件夹管理&quot;&gt;&lt;/a&gt;文件/文件夹管理&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;comment&quot;&gt;# 列出当前目录文件（不包括隐含文件） &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls -a &lt;span class=&quot;comment&quot;&gt;# 列出当前目录文件（包括隐含文件） &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls -l &lt;span class=&quot;comment&quot;&gt;# 列出当前目录下文件的详细信息 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; .. &lt;span class=&quot;comment&quot;&gt;# 回当前目录的上一级目录 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; - &lt;span class=&quot;comment&quot;&gt;# 回上一次所在的目录 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~ 或 &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 回当前用户的宿主目录 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mk 目录名 &lt;span class=&quot;comment&quot;&gt;# 创建一个目录 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rmdir 空目录名 &lt;span class=&quot;comment&quot;&gt;# 删除一个空目录 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rm 文件名 文件名 &lt;span class=&quot;comment&quot;&gt;# 删除一个文件或多个文件 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rm -rf 非空目录名 &lt;span class=&quot;comment&quot;&gt;# 删除一个非空目录下的一切 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv 路经/文件 &lt;span class=&quot;comment&quot;&gt;# /路经/文件移动相对路经下的文件到绝对路经下 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv 文件名 新名称 &lt;span class=&quot;comment&quot;&gt;# 在当前目录下改名 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find 路经 -name “字符串” &lt;span class=&quot;comment&quot;&gt;# 查找路经所在范围内满足字符串匹配的文件和目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://oje.pw/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>CentOS常用命令</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-command/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-command/</id>
    <published>2018-04-01T10:23:54.000Z</published>
    <updated>2018-04-04T05:34:40.576Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关机-系统的关机、重启以及登出-的命令"><a href="#关机-系统的关机、重启以及登出-的命令" class="headerlink" title="关机 (系统的关机、重启以及登出 )的命令"></a>关机 (系统的关机、重启以及登出 )的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ shutdown -h now <span class="comment"># 关闭系统(1) </span></span><br><span class="line">$ init 0 <span class="comment"># 关闭系统(2) </span></span><br><span class="line">$ telinit 0 <span class="comment"># 关闭系统(3) </span></span><br><span class="line">$ shutdown -h hours:minutes <span class="comment"># 按预定时间关闭系统 </span></span><br><span class="line">$ shutdown -c <span class="comment"># 取消按预定时间关闭系统 </span></span><br><span class="line">$ shutdown -r now <span class="comment"># 重启(1) </span></span><br><span class="line">$ reboot <span class="comment"># 重启(2) </span></span><br><span class="line">$ <span class="built_in">logout</span> <span class="comment"># 注销</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a>文件和目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home <span class="comment"># 进入 '/ home' 目录</span></span><br><span class="line">$ <span class="built_in">cd</span> .. <span class="comment"># 返回上一级目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> ../.. <span class="comment"># 返回上两级目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="comment"># 进入个人的主目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> ~user1 <span class="comment"># 进入个人的主目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> - <span class="comment"># 返回上次所在的目录 </span></span><br><span class="line">$ <span class="built_in">pwd</span> <span class="comment"># 显示工作路径 </span></span><br><span class="line">$ ls <span class="comment"># 查看目录中的文件 </span></span><br><span class="line">$ ls -F <span class="comment"># 查看目录中的文件 </span></span><br><span class="line">$ ls -l <span class="comment"># 显示文件和目录的详细资料 </span></span><br><span class="line">$ ls -a <span class="comment"># 显示隐藏文件  </span></span><br><span class="line">$ mkdir dir1 <span class="comment"># 创建一个叫做 'dir1' 的目录</span></span><br><span class="line">$ mkdir dir1 dir2 <span class="comment"># 同时创建两个目录 </span></span><br><span class="line">$ mkdir -p /tmp/dir1/dir2 <span class="comment"># 创建一个目录树 </span></span><br><span class="line">$ rm -f file1 <span class="comment"># 删除一个叫做 'file1' 的文件' </span></span><br><span class="line">$ rmdir dir1 <span class="comment"># 删除一个叫做 'dir1' 的目录' </span></span><br><span class="line">$ rm -rf dir1 <span class="comment"># 删除一个叫做 'dir1' 的目录并同时删除其内容 </span></span><br><span class="line">$ rm -rf dir1 dir2 <span class="comment"># 同时删除两个目录及它们的内容 </span></span><br><span class="line">$ mv dir1 new_dir <span class="comment"># 重命名/移动 一个目录 </span></span><br><span class="line">$ cp file1 file2 <span class="comment"># 复制一个文件 </span></span><br><span class="line">$ cp dir/* . <span class="comment"># 复制一个目录下的所有文件到当前工作目录 </span></span><br><span class="line">$ cp -a /tmp/dir1 . <span class="comment"># 复制一个目录到当前工作目录 </span></span><br><span class="line">$ cp -a dir1 dir2 <span class="comment"># 复制一个目录 </span></span><br><span class="line">$ ln -s file1 lnk1 <span class="comment"># 创建一个指向文件或目录的软链接 </span></span><br><span class="line">$ ln file1 lnk1 <span class="comment"># 创建一个指向文件或目录的物理链接 </span></span><br><span class="line">$ touch file1 <span class="comment"># 创建一个文件</span></span><br></pre></td></tr></table></figure><h3 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ find / -name file1 <span class="comment"># 从 '/' 开始进入根文件系统搜索文件和目录 </span></span><br><span class="line">$ find / -user user1 <span class="comment"># 搜索属于用户 'user1' 的文件和目录 </span></span><br><span class="line"><span class="comment"># 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 </span></span><br><span class="line">$ find  /home/user1  -name  \*.bin </span><br><span class="line">$ find /usr/bin -<span class="built_in">type</span> f -atime +100 <span class="comment"># 搜索在过去100天内未被使用过的执行文件 </span></span><br><span class="line">$ find /usr/bin -<span class="built_in">type</span> f -mtime -10 <span class="comment"># 搜索在10天内被创建或者修改过的文件 </span></span><br><span class="line">$ locate \*.ps  <span class="comment"># 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 </span></span><br><span class="line">$ whereis file <span class="comment"># 显示一个二进制文件、源码或man的位置 </span></span><br><span class="line">$ <span class="built_in">which</span> file  <span class="comment"># 显示一个二进制文件或可执行文件的完整路径 </span></span><br><span class="line"><span class="comment"># 在当前目录及其子目录所有.c和.h文件中查找 'expr'</span></span><br><span class="line">$ find -name <span class="string">'*.[ch]'</span> | xargs grep -E <span class="string">'expr'</span> </span><br><span class="line"><span class="comment"># 在当前目录及其子目录的常规文件中查找 'expr'</span></span><br><span class="line">$ find -<span class="built_in">type</span> f -print0 | xargs -r0 grep -F <span class="string">'expr'</span> </span><br><span class="line"><span class="comment"># 在当前目录中查找 'expr'</span></span><br><span class="line">$ find -maxdepth 1 -<span class="built_in">type</span> f | xargs grep -F <span class="string">'expr'</span></span><br></pre></td></tr></table></figure><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat file1 <span class="comment"># 从第一个字节开始正向查看文件的内容 </span></span><br><span class="line">$ tac file1 <span class="comment"># 从最后一行开始反向查看一个文件的内容 </span></span><br><span class="line">$ more file1 <span class="comment"># 查看一个长文件的内容 </span></span><br><span class="line">$ less file1 <span class="comment"># 类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作 </span></span><br><span class="line">$ head -2 file1 <span class="comment"># 查看一个文件的前两行 </span></span><br><span class="line">$ tail -2 file1 <span class="comment"># 查看一个文件的最后两行</span></span><br></pre></td></tr></table></figure><h3 id="打包和解压缩文件"><a href="#打包和解压缩文件" class="headerlink" title="打包和解压缩文件"></a>打包和解压缩文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ bunzip2 file1.bz2 <span class="comment"># 解压一个叫做 'file1.bz2'的文件 </span></span><br><span class="line">$ bzip2 file1 <span class="comment"># 压缩一个叫做 'file1' 的文件 </span></span><br><span class="line">$ gunzip file1.gz <span class="comment"># 解压一个叫做 'file1.gz'的文件 </span></span><br><span class="line">$ gzip file1 <span class="comment"># 压缩一个叫做 'file1'的文件 </span></span><br><span class="line">$ gzip -9 file1 <span class="comment"># 最大程度压缩 </span></span><br><span class="line">$ rar a file1.rar test_file <span class="comment"># 创建一个叫做 'file1.rar' 的包 </span></span><br><span class="line">$ rar a file1.rar file1 file2 dir1 <span class="comment"># 打包 'file1', 'file2' 以及目录 'dir1' </span></span><br><span class="line">$ rar x file1.rar <span class="comment"># 解rar包 </span></span><br><span class="line">$ unrar x file1.rar <span class="comment"># 解rar包 </span></span><br><span class="line">$ tar -cvf archive.tar file1 <span class="comment"># 创建一个非压缩的tar包 </span></span><br><span class="line">$ tar -cvf archive.tar file1 file2 dir1 <span class="comment"># 创建一个包含了 'file1', 'file2' 'dir1'的包 </span></span><br><span class="line">$ tar -tf archive.tar <span class="comment"># 显示一个包中的内容 </span></span><br><span class="line">$ tar -xvf archive.tar <span class="comment"># 释放一个包 </span></span><br><span class="line">$ tar -xvf archive.tar -C /tmp <span class="comment"># 将压缩包释放到 /tmp目录下 （-c是指定目录）</span></span><br><span class="line">$ tar -cvfj archive.tar.bz2 dir1 <span class="comment"># 创建一个bzip2格式的压缩包 </span></span><br><span class="line">$ tar -xvfj archive.tar.bz2 <span class="comment"># 解压一个bzip2格式的压缩包 </span></span><br><span class="line">$ tar -cvfz archive.tar.gz dir1 <span class="comment"># 创建一个gzip格式的压缩包 </span></span><br><span class="line">$ tar -xvfz archive.tar.gz <span class="comment"># 解压一个gzip格式的压缩包 </span></span><br><span class="line">$ zip file1.zip file1 <span class="comment"># 创建一个zip格式的压缩包 </span></span><br><span class="line">$ zip -r file1.zip file1 file2 dir1 <span class="comment"># 将几个文件和目录同时压缩成一个zip格式的压缩包 </span></span><br><span class="line">$ unzip file1.zip <span class="comment"># 解压一个zip格式压缩包</span></span><br></pre></td></tr></table></figure><h3 id="磁盘空间操作的命令"><a href="#磁盘空间操作的命令" class="headerlink" title="磁盘空间操作的命令"></a>磁盘空间操作的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ df -h <span class="comment"># 显示已经挂载的分区列表 </span></span><br><span class="line">$ ls -lSr |more <span class="comment"># 以尺寸大小排列文件和目录 </span></span><br><span class="line">$ du -sh dir1 <span class="comment"># 估算目录 'dir1' 已经使用的磁盘空间</span></span><br><span class="line">$ du -sk * | sort -rn <span class="comment"># 以容量大小为依据依次显示文件和目录的大小</span></span><br></pre></td></tr></table></figure><h3 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ivh package.rpm <span class="comment"># 安装一个rpm包 </span></span><br><span class="line">$ rpm -ivh --nodeeps package.rpm <span class="comment"># 安装一个rpm包而忽略依赖关系警告 </span></span><br><span class="line">$ rpm -U package.rpm <span class="comment"># 更新一个rpm包但不改变其配置文件 </span></span><br><span class="line">$ rpm -F package.rpm <span class="comment"># 更新一个确定已经安装的rpm包 </span></span><br><span class="line">$ rpm -e package_name.rpm <span class="comment"># 删除一个rpm包 </span></span><br><span class="line">$ rpm -qa <span class="comment"># 显示系统中所有已经安装的rpm包 </span></span><br><span class="line">$ rpm -qa | grep httpd <span class="comment"># 显示所有名称中包含 "httpd" 字样的rpm包 </span></span><br><span class="line">$ rpm -qi package_name <span class="comment"># 获取一个已安装包的特殊信息 </span></span><br><span class="line">$ rpm -ql package_name <span class="comment"># 显示一个已经安装的rpm包提供的文件列表 </span></span><br><span class="line">$ rpm -qc package_name <span class="comment"># 显示一个已经安装的rpm包提供的配置文件列表 </span></span><br><span class="line">$ rpm -q package_name --whatrequires <span class="comment"># 显示与一个rpm包存在依赖关系的列表 </span></span><br><span class="line">$ rpm -q package_name --whatprovides <span class="comment"># 显示一个rpm包所占的体积 </span></span><br><span class="line">$ rpm -q package_name --scripts <span class="comment"># 显示在安装/删除期间所执行的脚本l </span></span><br><span class="line">$ rpm -q package_name --changelog <span class="comment"># 显示一个rpm包的修改历史 </span></span><br><span class="line">$ rpm -qf /etc/httpd/conf/httpd.conf <span class="comment"># 确认所给的文件由哪个rpm包所提供 </span></span><br><span class="line">$ rpm -qp package.rpm -l <span class="comment"># 显示由一个尚未安装的rpm包提供的文件列表 </span></span><br><span class="line">$ rpm --import /media/cdrom/RPM-GPG-KEY <span class="comment"># 导入公钥数字证书 </span></span><br><span class="line">$ rpm --checksig package.rpm <span class="comment"># 确认一个rpm包的完整性 </span></span><br><span class="line">$ rpm -qa gpg-pubkey <span class="comment"># 确认已安装的所有rpm包的完整性 </span></span><br><span class="line"><span class="comment"># 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 </span></span><br><span class="line">$ rpm -V package_name </span><br><span class="line">$ rpm -Va <span class="comment"># 检查系统中所有已安装的rpm包- 小心使用 </span></span><br><span class="line">$ rpm -Vp package.rpm <span class="comment"># 确认一个rpm包还未安装 </span></span><br><span class="line"><span class="comment"># 从一个rpm包运行可执行文件 </span></span><br><span class="line">$ rpm2cpio package.rpm | cpio --extract --make-directories *bin* </span><br><span class="line"><span class="comment"># 从一个rpm源码安装一个构建好的包 </span></span><br><span class="line">$ rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm </span><br><span class="line"><span class="comment"># 从一个rpm源码构建一个 rpm 包 </span></span><br><span class="line">$ rpmbuild --rebuild package_name.src.rpm</span><br></pre></td></tr></table></figure><h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ yum install package_name <span class="comment"># 下载并安装一个rpm包 </span></span><br><span class="line"><span class="comment"># 将安装一个rpm包使用你自己的软件仓库为你解决所有依赖关系 </span></span><br><span class="line">$ yum localinstall package_name.rpm </span><br><span class="line">$ yum update package_name.rpm <span class="comment"># 更新当前系统中所有安装的rpm包 </span></span><br><span class="line">$ yum update package_name <span class="comment"># 更新一个rpm包 </span></span><br><span class="line">$ yum remove package_name <span class="comment"># 删除一个rpm包 </span></span><br><span class="line">$ yum list <span class="comment"># 列出当前系统中安装的所有包 </span></span><br><span class="line">$ yum search package_name <span class="comment"># 在rpm仓库中搜寻软件包 </span></span><br><span class="line">$ yum clean packages <span class="comment"># 清理rpm缓存删除下载的包 </span></span><br><span class="line">$ yum clean headers <span class="comment"># 删除所有头文件 </span></span><br><span class="line">$ yum clean all <span class="comment"># 删除所有缓存的包和头文件﻿​</span></span><br></pre></td></tr></table></figure><h3 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ arch <span class="comment"># 显示机器的处理器架构(1) </span></span><br><span class="line">$ uname -m <span class="comment"># 显示机器的处理器架构(2) </span></span><br><span class="line">$ uname -r <span class="comment"># 显示正在使用的内核版本 </span></span><br><span class="line">$ dmidecode -q <span class="comment"># 显示硬件系统部件 - (SMBIOS / DMI) </span></span><br><span class="line">$ hdparm -i /dev/hda <span class="comment"># 罗列一个磁盘的架构特性 </span></span><br><span class="line">$ hdparm -tT /dev/sda <span class="comment"># 在磁盘上执行测试性读取操作 </span></span><br><span class="line">$ cat /proc/cpuinfo <span class="comment"># 显示CPU info的信息 </span></span><br><span class="line">$ cat /proc/interrupts <span class="comment"># 显示中断 </span></span><br><span class="line">$ cat /proc/meminfo <span class="comment"># 校验内存使用 </span></span><br><span class="line">$ cat /proc/swaps <span class="comment"># 显示哪些swap被使用 </span></span><br><span class="line">$ cat /proc/version <span class="comment"># 显示内核的版本 </span></span><br><span class="line">$ cat /proc/net/dev <span class="comment"># 显示网络适配器及统计 </span></span><br><span class="line">$ cat /proc/mounts <span class="comment"># 显示已加载的文件系统 </span></span><br><span class="line">$ lspci -tv <span class="comment"># 罗列 PCI 设备 </span></span><br><span class="line">$ lsusb -tv <span class="comment"># 显示 USB 设备 </span></span><br><span class="line">$ date <span class="comment"># 显示系统日期 </span></span><br><span class="line">$ cal 2007 <span class="comment"># 显示2007年的日历表 </span></span><br><span class="line">$ date 041217002007.00 <span class="comment"># 设置日期和时间 - 月日时分年.秒 </span></span><br><span class="line">$ clock -w <span class="comment"># 将时间修改保存到 BIOS</span></span><br></pre></td></tr></table></figure><h3 id="挂载命令"><a href="#挂载命令" class="headerlink" title="挂载命令"></a>挂载命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载一个叫做hda2的盘  （注：确定目录 '/ mnt/hda2' 已经存在） </span></span><br><span class="line">$ mount /dev/hda2 /mnt/hda2 </span><br><span class="line"><span class="comment"># 卸载一个叫做hda2的盘（先从挂载点 '/ mnt/hda2' 退出）</span></span><br><span class="line">$ umount /dev/hda2  </span><br><span class="line"><span class="comment"># 当设备繁忙时强制卸载 </span></span><br><span class="line">$ fuser -km /mnt/hda2</span><br><span class="line"><span class="comment"># 运行卸载操作而不写入 /etc/mtab 文件（当文件为只读或当磁盘写满时非常有用） </span></span><br><span class="line">$ umount -n /mnt/hda2 <span class="comment"># </span></span><br><span class="line">$ mount /dev/fd0 /mnt/floppy <span class="comment"># 挂载一个软盘 </span></span><br><span class="line">$ mount /dev/cdrom /mnt/cdrom <span class="comment"># 挂载一个光盘</span></span><br><span class="line">$ mount /dev/hdc /mnt/cdrecorder <span class="comment"># 挂载一个cdrw或dvdrom </span></span><br><span class="line">$ mount /dev/hdb /mnt/cdrecorder <span class="comment"># 挂载一个cdrw或dvdrom </span></span><br><span class="line">$ mount -o loop file.iso /mnt/cdrom <span class="comment"># 挂载一个文件或ISO镜像文件 </span></span><br><span class="line">$ mount -t vfat /dev/hda5 /mnt/hda5 <span class="comment"># 挂载一个Windows FAT32文件系统 </span></span><br><span class="line">$ mount /dev/sda1 /mnt/usbdisk <span class="comment"># 挂载一个usb 捷盘或闪存设备</span></span><br><span class="line"><span class="comment"># 挂载一个windows网络共享  </span></span><br><span class="line">$ mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share</span><br></pre></td></tr></table></figure><h3 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a>用户和群组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd group_name <span class="comment"># 创建一个新用户组 </span></span><br><span class="line">$ groupdel group_name <span class="comment"># 删除一个用户组 </span></span><br><span class="line">$ groupmod -n new_group_name old_group_name <span class="comment"># 重命名一个用户组 </span></span><br><span class="line"><span class="comment"># 创建一个属于 "admin" 用户组的用户 </span></span><br><span class="line">$ useradd -c <span class="string">"Name Surname "</span> -g admin -d /home/user1 -s /bin/bash user1 </span><br><span class="line">$ useradd user1 <span class="comment"># 创建一个新用户 </span></span><br><span class="line">$ userdel -r user1 <span class="comment"># 删除一个用户 ( '-r' 同时删除除主目录) </span></span><br><span class="line">$ passwd user1 <span class="comment"># 修改一个用户的口令 (只允许root执行) </span></span><br><span class="line">$ chage -E 2005-12-31 user1 <span class="comment"># 设置用户口令的失效期限 </span></span><br><span class="line">$ ls -lh <span class="comment"># 显示权限 </span></span><br><span class="line"> <span class="comment"># 设置目录的所有人(u)、群组(g)以及其他人(o)以读(r)、写(w)和执行(x)的权限 </span></span><br><span class="line">$ chmod 777 directory1</span><br><span class="line"><span class="comment"># 删除群组(g)与其他人(o)对目录的读写执行权限 </span></span><br><span class="line">$ chmod 700 directory1 </span><br><span class="line"><span class="comment"># 改变一个文件的所有人属性，为use1</span></span><br><span class="line">$ chown user1 file1 </span><br><span class="line"><span class="comment"># 改变一个目录的所有人属性并同时改变改目录下所有文件的属性都为use1所有 </span></span><br><span class="line">$ chown -R user1 directory1 </span><br><span class="line"><span class="comment"># 改变文件的群组为group1 </span></span><br><span class="line">$ chgrp group1 file1</span><br><span class="line"><span class="comment"># 改变一个文件的所有人和群组属性，所属组为group1，用户为use1。 </span></span><br><span class="line">$ chown user1:group1 file1 </span><br><span class="line"><span class="comment"># 罗列一个系统中所有使用了SUID控制的文件 </span></span><br><span class="line">$ find / -perm -u+s </span><br><span class="line"><span class="comment"># 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 </span></span><br><span class="line">$ chmod u+s /bin/file1 </span><br><span class="line"><span class="comment"># 禁用一个二进制文件的 SUID位 </span></span><br><span class="line">$ chmod u<span class="_">-s</span> /bin/file1 </span><br><span class="line">$ chmod g+s /home/public <span class="comment"># 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 </span></span><br><span class="line">$ chmod g<span class="_">-s</span> /home/public <span class="comment"># 禁用一个目录的 SGID 位 </span></span><br><span class="line">$ chmod o+t /home/public <span class="comment"># 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 </span></span><br><span class="line">$ chmod o-t /home/public <span class="comment"># 禁用一个目录的 STIKY 位</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关机-系统的关机、重启以及登出-的命令&quot;&gt;&lt;a href=&quot;#关机-系统的关机、重启以及登出-的命令&quot; class=&quot;headerlink&quot; title=&quot;关机 (系统的关机、重启以及登出 )的命令&quot;&gt;&lt;/a&gt;关机 (系统的关机、重启以及登出 )的命令&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ shutdown -h now &lt;span class=&quot;comment&quot;&gt;# 关闭系统(1) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ init 0 &lt;span class=&quot;comment&quot;&gt;# 关闭系统(2) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ telinit 0 &lt;span class=&quot;comment&quot;&gt;# 关闭系统(3) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ shutdown -h hours:minutes &lt;span class=&quot;comment&quot;&gt;# 按预定时间关闭系统 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ shutdown -c &lt;span class=&quot;comment&quot;&gt;# 取消按预定时间关闭系统 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ shutdown -r now &lt;span class=&quot;comment&quot;&gt;# 重启(1) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ reboot &lt;span class=&quot;comment&quot;&gt;# 重启(2) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;logout&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 注销&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://oje.pw/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS端口</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-port/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-port/</id>
    <published>2018-04-01T08:57:08.000Z</published>
    <updated>2018-04-04T05:09:35.414Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看80端口占用</span></span><br><span class="line">$ lsof -i tcp:80</span><br><span class="line"><span class="comment"># 列出所有端口</span></span><br><span class="line">$ netstat -ntlp</span><br><span class="line"><span class="comment"># 开启端口（以80端口为例）</span></span><br><span class="line"><span class="comment"># 方法一：</span></span><br><span class="line">$ /sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT  <span class="comment"># 写入修改</span></span><br><span class="line">$ /etc/init.d/iptables save  <span class="comment"># 保存修改</span></span><br><span class="line">$ service iptables restart  <span class="comment"># 重启防火墙，修改生效</span></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">$ vi /etc/sysconfig/iptables  <span class="comment"># 打开配置文件加入如下语句:</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  <span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line"><span class="comment"># 关闭端口</span></span><br><span class="line"><span class="comment"># 方法一：</span></span><br><span class="line">$ /sbin/iptables -I INPUT -p tcp --dport 80 -j DROP  <span class="comment"># 写入修改</span></span><br><span class="line">$ /etc/init.d/iptables save  <span class="comment"># 保存修改</span></span><br><span class="line">$ service iptables restart  <span class="comment"># 重启防火墙，修改生效</span></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">$ vi /etc/sysconfig/iptables  <span class="comment">#打开配置文件加入如下语句:</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP  <span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line"><span class="comment"># 查看端口状态</span></span><br><span class="line">$ /etc/init.d/iptables status</span><br><span class="line"><span class="comment"># 查询防火墙状态:</span></span><br><span class="line">$ service iptables status</span><br><span class="line"><span class="comment"># 停止防火墙:</span></span><br><span class="line">$ service iptables stop </span><br><span class="line"><span class="comment"># 启动防火墙:</span></span><br><span class="line">$ service iptables start </span><br><span class="line"><span class="comment"># 重启防火墙:</span></span><br><span class="line">$ service iptables restart </span><br><span class="line"><span class="comment"># 永久关闭防火墙:</span></span><br><span class="line">$ chkconfig iptables off </span><br><span class="line"><span class="comment"># 永久关闭后启用:</span></span><br><span class="line">$ chkconfig iptables on</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://oje.pw/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS无法上网问题</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-network/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-network/</id>
    <published>2018-04-01T08:37:19.000Z</published>
    <updated>2018-04-04T05:06:33.825Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/sysconfig/network-scripts/</span><br><span class="line"><span class="comment"># ls 查看一下ifcfg-eno后面对应的数字是什么，以eno32为例</span></span><br><span class="line">$ vim ifcfg-eno32 <span class="comment"># 设置ONBOOT=yes 即开启自动启用网络连接</span></span><br><span class="line">$ service network restart 重启网络</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://oje.pw/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS git升级</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-git-update/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-git-update/</id>
    <published>2018-04-01T08:37:00.000Z</published>
    <updated>2018-04-04T05:02:27.324Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装编译git时需要的包</span></span><br><span class="line">$ yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">$ yum install  gcc perl-ExtUtils-MakeMaker</span><br><span class="line"><span class="comment"># 删除已有的git</span></span><br><span class="line">$ yum remove git</span><br><span class="line"><span class="comment"># 下载git源码</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/src</span><br><span class="line">$ wget https://www.kernel.org/pub/software/scm/git/git-2.0.5.tar.gz</span><br><span class="line">$ tar xzf git-2.0.5.tar.gz</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ <span class="built_in">cd</span> git-2.0.5</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span>/git all</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span>/git install</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:/usr/local/git/bin"</span> &gt;&gt; /etc/bashrc</span><br><span class="line">$ <span class="built_in">source</span> /etc/bashrc</span><br><span class="line"><span class="comment"># 检查一下版本号</span></span><br><span class="line">$ git --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Centos" scheme="http://oje.pw/tags/Centos/"/>
    
      <category term="Git" scheme="http://oje.pw/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>CentOS yum,npm源更换</title>
    <link href="http://oje.pw/2018/04/01/linux-centos-yum-npm/"/>
    <id>http://oje.pw/2018/04/01/linux-centos-yum-npm/</id>
    <published>2018-04-01T08:24:57.000Z</published>
    <updated>2018-04-04T05:11:40.472Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum源更换</span></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">$ <span class="built_in">cd</span> /etc/yum.repos.d/﻿​</span><br><span class="line">$ wget http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line"><span class="comment"># 生成缓存：</span></span><br><span class="line">$ yum clean all</span><br><span class="line">$ yum makecache﻿​</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm源更换</span></span><br><span class="line">$ <span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span>﻿​</span><br><span class="line"><span class="comment"># npm升级</span></span><br><span class="line">$ npm update npm﻿​</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://oje.pw/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>ADB常用命令</title>
    <link href="http://oje.pw/2018/04/01/andriod-adb/"/>
    <id>http://oje.pw/2018/04/01/andriod-adb/</id>
    <published>2018-04-01T08:04:54.000Z</published>
    <updated>2018-04-04T05:02:46.055Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices <span class="comment"># 查看设备</span></span><br><span class="line">$ adb install -r &lt;package&gt; <span class="comment">#安装apk</span></span><br><span class="line">$ adb uninstall &lt;package&gt; <span class="comment">#卸载apk</span></span><br><span class="line">$ adb -s 设备号 install xxx.apk </span><br><span class="line"><span class="comment"># 从模拟器或手机中复制一个文件或文件夹（递归的）使用：</span></span><br><span class="line">$ adb pull &lt;remote&gt; &lt;<span class="built_in">local</span>&gt;</span><br><span class="line"><span class="comment"># 复制一个文件或文件夹（递归的）到模拟器或手机中使用：</span></span><br><span class="line">$ adb push &lt;<span class="built_in">local</span>&gt; &lt;remote&gt;</span><br><span class="line"><span class="comment"># 在这个命令中和引用的是文件或文件夹的路径，在开发用电脑上的是local，在模拟器或手机上的是remote</span></span><br><span class="line">$ adb start-server <span class="comment">#启动adb server</span></span><br><span class="line">$ adb <span class="built_in">kill</span>-server <span class="comment">#停止adb server</span></span><br><span class="line"><span class="comment"># 列出系统应用的所有包名：</span></span><br><span class="line">$ adb shell pm list packages -s</span><br><span class="line"><span class="comment"># 列出除了系统应用的第三方应用包名：</span></span><br><span class="line">$ adb shell pm list packages -3</span><br><span class="line"><span class="comment"># 使用 grep 来过滤：</span></span><br><span class="line">$ adb shell pm list packages | grep qq</span><br><span class="line"><span class="comment"># 清除应用数据与缓存</span></span><br><span class="line">$ adb shell pm clear &lt;packagename&gt;</span><br><span class="line"><span class="comment"># 启动应用</span></span><br><span class="line">$ adb shell am start -n 包名/类名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="ADB" scheme="http://oje.pw/tags/ADB/"/>
    
      <category term="Andriod" scheme="http://oje.pw/tags/Andriod/"/>
    
  </entry>
  
  <entry>
    <title>Airmon-ng简要操作</title>
    <link href="http://oje.pw/2018/04/01/cs-kali-airmon-ng/"/>
    <id>http://oje.pw/2018/04/01/cs-kali-airmon-ng/</id>
    <published>2018-04-01T07:14:59.000Z</published>
    <updated>2018-04-04T05:19:48.854Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ airmon-ng check <span class="built_in">kill</span> <span class="comment"># 杀进程</span></span><br><span class="line">$ airmon-ng start wlan0 <span class="comment"># 启动无效网卡</span></span><br><span class="line">$ airodump-ng wlan0mon <span class="comment"># 探测</span></span><br><span class="line"><span class="comment"># 抓包</span></span><br><span class="line">$ airodump-ng --bssid XX:XX:XX:XX:XX:XX -c 1 -w testap wlan0mon</span><br><span class="line">--bssid 是路由器的mac地址</span><br><span class="line">-w 是写入到文件longas中</span><br><span class="line">-c 11 是频道11</span><br><span class="line"><span class="comment"># 攻击</span></span><br><span class="line">$ aireplay-ng -0 0 -a XX:XX:XX:XX:XX:XX -c XX:XX:XX:XX:XX:XX wlan0mon</span><br><span class="line">-0 采用deauth攻击模式，后面跟上攻击次数</span><br><span class="line">-a 后跟路由器的mac地址</span><br><span class="line">-c 后跟客户端的mac地址</span><br><span class="line"><span class="comment"># 直接破解</span></span><br><span class="line">$ aircrack-ng -w Wordlists.txt CAP-01.cap</span><br><span class="line"><span class="comment"># 转换后用hashcat跑</span></span><br><span class="line">$ cap2hccapx.exe testap.cap test.hccapx</span><br><span class="line">$ hashcat64.exe -m 2500 -D 2 test.hccapx pass.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="安全π" scheme="http://oje.pw/categories/%E5%AE%89%E5%85%A8%CF%80/"/>
    
    
      <category term="网络安全" scheme="http://oje.pw/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="Kali" scheme="http://oje.pw/tags/Kali/"/>
    
      <category term="Airmon-ng" scheme="http://oje.pw/tags/Airmon-ng/"/>
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu静态IP和SSH配置</title>
    <link href="http://oje.pw/2018/04/01/linux-ubuntu-ip-xshell/"/>
    <id>http://oje.pw/2018/04/01/linux-ubuntu-ip-xshell/</id>
    <published>2018-04-01T06:34:16.000Z</published>
    <updated>2018-04-04T05:32:41.358Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改静态ip</span></span><br><span class="line">$ vim /etc/network/interfaces</span><br><span class="line">auto eth0</span><br><span class="line">    iface eth0 inet static</span><br><span class="line">    address 192.168.1.100</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 192.168.1.1</span><br><span class="line"><span class="comment"># DNS解析</span></span><br><span class="line">$ vim /etc/resolv.conf</span><br><span class="line">    nameserver 192.168.1.1</span><br><span class="line">$ vim /etc/resolvconf/resolv.conf.d/base</span><br><span class="line">    nameserver 192.168.1.1</span><br><span class="line"><span class="comment"># 要将/etc/NetworkManager/目录下的system-connections删除，或者移动到其他目录下</span></span><br><span class="line">$ sudo/etc/init.d/networking restart <span class="comment"># 重启网卡</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">$ sudo apt-get install openssh-server <span class="comment"># 安装</span></span><br><span class="line">$ ps -e |grep ssh <span class="comment"># 查看</span></span><br><span class="line">$ /etc/init.d/ssh start <span class="comment"># 启动</span></span><br><span class="line"><span class="comment"># 如果无法启动</span></span><br><span class="line">$ vim /etc/ssh/sshd_config </span><br><span class="line"><span class="comment"># 将 PermitRootLogin改为yes：</span></span><br><span class="line">$ sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://oje.pw/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装Ftp和Smaba</title>
    <link href="http://oje.pw/2018/04/01/linux-ubuntu-ftp-smaba/"/>
    <id>http://oje.pw/2018/04/01/linux-ubuntu-ftp-smaba/</id>
    <published>2018-04-01T06:33:27.000Z</published>
    <updated>2018-04-04T05:31:44.160Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 ftp</span></span><br><span class="line">$ apt-get install vsftpd</span><br><span class="line"><span class="comment"># 添加用户和权限</span></span><br><span class="line"><span class="comment"># 新建"/home/uftp"目录作为用户主目录</span></span><br><span class="line"><span class="comment"># 新建用户uftp并设置密码</span></span><br><span class="line">$ sudo useradd -d /home/uftp -s /bin/bash uftp</span><br><span class="line">$ passwd uftp XXX</span><br><span class="line">$ vim /etc/vsftpd.conf <span class="comment"># 配置文件</span></span><br><span class="line">    userlist_deny=NO</span><br><span class="line">    userlist_enable=YES </span><br><span class="line">    userlist_file=/etc/allowed_users</span><br><span class="line">    seccomp_sandbox=NO</span><br><span class="line">    chroot_list_enable=YES</span><br><span class="line">　　chroot_list_file=/etc/chroot_list</span><br><span class="line"><span class="comment"># 添加用户uftp到allowed_users,chroot_list</span></span><br><span class="line">$ vim /etc/allowed_users</span><br><span class="line">$ vim /etc/chroot_list</span><br><span class="line"><span class="comment"># 启动/关闭/重启服务</span></span><br><span class="line">$ sudo /etc/init.d/vsftpd start</span><br><span class="line">$ sudo /etc/init.d/vsftpd stop</span><br><span class="line">$ sudo /etc/init.d/vsftpd restart</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 samba</span></span><br><span class="line">$ sudo apt-get install samba</span><br><span class="line"><span class="comment"># smbclient: </span></span><br><span class="line">$ sudo apt-get install smbclient</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">$ vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># 在文件末尾加上如下[share]（相当于在home目录项增加了一个新用户）</span></span><br><span class="line">[share]</span><br><span class="line">comment = Share Folder require password</span><br><span class="line">browseable = yes</span><br><span class="line">path = /home/share</span><br><span class="line">create mask = 0777</span><br><span class="line">directory mask = 0777</span><br><span class="line">valid users = share</span><br><span class="line">force user = nobody</span><br><span class="line">force group = nogroup</span><br><span class="line">public = yes</span><br><span class="line">writable = yes</span><br><span class="line">available = yes</span><br><span class="line"><span class="comment"># 保存退出后重启samba：</span></span><br><span class="line">$ sudo /etc/init.d/samba restart</span><br><span class="line"><span class="comment"># 切换到 /home/目录下创建一个用户目录：</span></span><br><span class="line">$ sudo mkdir share</span><br><span class="line"><span class="comment"># 设置目录的权限：（777代表最高权限，可读可写可执行）</span></span><br><span class="line">$ chmod 777 share</span><br><span class="line"><span class="comment"># 添加用户到samba</span></span><br><span class="line">$ smbpasswd -a starbucks</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="Linux" scheme="http://oje.pw/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://oje.pw/tags/Ubuntu/"/>
    
      <category term="Ftp" scheme="http://oje.pw/tags/Ftp/"/>
    
      <category term="Smaba" scheme="http://oje.pw/tags/Smaba/"/>
    
  </entry>
  
  <entry>
    <title>Mysql简单安装配置</title>
    <link href="http://oje.pw/2018/04/01/db-mysql-init/"/>
    <id>http://oje.pw/2018/04/01/db-mysql-init/</id>
    <published>2018-04-01T04:54:42.000Z</published>
    <updated>2018-04-04T05:28:07.775Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">my.ini</span><br><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line">default-character-set=utf8 </span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line">port = 3306 </span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line">basedir=D:\mysql\mysql-5.6.17-winx64</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line">datadir=D:\mysql\mysql-5.6.17-winx64\data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="win-mysql"><a href="#win-mysql" class="headerlink" title="win-mysql"></a>win-mysql</h2><h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> D:\mysql\mysql-5.6.17-winx64\bin</span><br><span class="line">$ mysqld install <span class="comment"># 安装服务</span></span><br><span class="line">$ mysqld remove <span class="comment"># 卸载服务</span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ net start mysql <span class="comment"># 启动服务</span></span><br><span class="line"><span class="comment"># 先删除 mysql 下的data文件夹</span></span><br><span class="line">$ mysqld --initialize <span class="comment"># 初始化</span></span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ net stop MySQL <span class="comment"># 关闭服务</span></span><br><span class="line">$ mysqld --skip-grant-tables <span class="comment"># 用安全模式打开</span></span><br><span class="line">$ mysql -u root -p <span class="comment"># 登录，密码为空，直接回车</span></span><br><span class="line">$ use mysql</span><br><span class="line">$ <span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'123'</span>);</span><br></pre></td></tr></table></figure><h3 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p <span class="comment"># 回车输入密码</span></span><br><span class="line">$ mysqladmin -u root -p password 密码 <span class="comment"># 设置密码</span></span><br></pre></td></tr></table></figure><h3 id="远程登入"><a href="#远程登入" class="headerlink" title="远程登入"></a>远程登入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ use mysql</span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">$ GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'root'</span> WITH GRANT OPTION; </span><br><span class="line"><span class="comment"># 刷新</span></span><br><span class="line">$ flush privileges;</span><br><span class="line"><span class="comment"># 查看是否成功</span></span><br><span class="line">$ select host,user from user;</span><br></pre></td></tr></table></figure><h2 id="linux-mysql"><a href="#linux-mysql" class="headerlink" title="linux-mysql"></a>linux-mysql</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">$ rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">$ yum install mysql-community-server</span><br></pre></td></tr></table></figure><h3 id="启动-关闭服务"><a href="#启动-关闭服务" class="headerlink" title="启动/关闭服务"></a>启动/关闭服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysqld restart/stop</span><br></pre></td></tr></table></figure><h3 id="设置密码-1"><a href="#设置密码-1" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root <span class="comment"># 首次无密</span></span><br><span class="line">$ use mysql</span><br><span class="line">$ <span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'123'</span>);</span><br></pre></td></tr></table></figure><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户</span></span><br><span class="line">$ grant all privileges on *.* to root@<span class="string">'%'</span>identified by <span class="string">'password'</span></span><br><span class="line"><span class="comment"># 如果是新用户而不是root，则要先新建用户</span></span><br><span class="line">$ create user <span class="string">'username'</span>@<span class="string">'%'</span> identified by <span class="string">'password'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;my.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysql]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql客户端默认字符集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-character-set=utf8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#设置3306端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port = 3306 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql的安装目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=D:\mysql\mysql-5.6.17-winx64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql数据库的数据的存放目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir=D:\mysql\mysql-5.6.17-winx64\data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 允许最大连接数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_connections=200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 服务端使用的字符集默认为8比特编码的latin1字符集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;character-set-server=utf8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建新表时将使用的默认存储引擎&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-storage-engine=INNODB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术π" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF%CF%80/"/>
    
    
      <category term="数据库" scheme="http://oje.pw/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Mysql" scheme="http://oje.pw/tags/Mysql/"/>
    
  </entry>
  
</feed>
