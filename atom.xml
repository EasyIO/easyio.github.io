<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wish a Starbucks Coffee Here!</title>
  
  <subtitle>What is your favorite coffee in Starbucks?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oje.pw/"/>
  <updated>2018-04-01T09:07:02.829Z</updated>
  <id>http://oje.pw/</id>
  
  <author>
    <name>oJe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos端口</title>
    <link href="http://oje.pw/2018/04/01/centos-port/"/>
    <id>http://oje.pw/2018/04/01/centos-port/</id>
    <published>2018-04-01T08:57:08.000Z</published>
    <updated>2018-04-01T09:07:02.829Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看80端口占用</span></span><br><span class="line">$ lsof -i tcp:80</span><br><span class="line"><span class="comment"># 列出所有端口</span></span><br><span class="line">$ netstat -ntlp</span><br><span class="line"><span class="comment"># 开启端口（以80端口为例）</span></span><br><span class="line"><span class="comment"># 方法一：</span></span><br><span class="line">$ /sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT  <span class="comment"># 写入修改</span></span><br><span class="line">$ /etc/init.d/iptables save  <span class="comment"># 保存修改</span></span><br><span class="line">$ service iptables restart  <span class="comment"># 重启防火墙，修改生效</span></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">$ vi /etc/sysconfig/iptables  <span class="comment"># 打开配置文件加入如下语句:</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  <span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line"><span class="comment"># 关闭端口</span></span><br><span class="line"><span class="comment"># 方法一：</span></span><br><span class="line">$ /sbin/iptables -I INPUT -p tcp --dport 80 -j DROP  <span class="comment"># 写入修改</span></span><br><span class="line">$ /etc/init.d/iptables save  <span class="comment"># 保存修改</span></span><br><span class="line">$ service iptables restart  <span class="comment"># 重启防火墙，修改生效</span></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">$ vi /etc/sysconfig/iptables  <span class="comment">#打开配置文件加入如下语句:</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROP  <span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line"><span class="comment"># 查看端口状态</span></span><br><span class="line">$ /etc/init.d/iptables status</span><br><span class="line"><span class="comment"># 查询防火墙状态:</span></span><br><span class="line">$ service iptables status</span><br><span class="line"><span class="comment"># 停止防火墙:</span></span><br><span class="line">$ service iptables stop </span><br><span class="line"><span class="comment"># 启动防火墙:</span></span><br><span class="line">$ service iptables start </span><br><span class="line"><span class="comment"># 重启防火墙:</span></span><br><span class="line">$ service iptables restart </span><br><span class="line"><span class="comment"># 永久关闭防火墙:</span></span><br><span class="line">$ chkconfig iptables off </span><br><span class="line"><span class="comment"># 永久关闭后启用:</span></span><br><span class="line">$ chkconfig iptables on</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="centos" scheme="http://oje.pw/tags/centos/"/>
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos无法上网问题</title>
    <link href="http://oje.pw/2018/04/01/centos-network/"/>
    <id>http://oje.pw/2018/04/01/centos-network/</id>
    <published>2018-04-01T08:37:19.000Z</published>
    <updated>2018-04-01T08:43:34.723Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/sysconfig/network-scripts/</span><br><span class="line"><span class="comment"># ls 查看一下ifcfg-eno后面对应的数字是什么，以eno32为例</span></span><br><span class="line">$ vim ifcfg-eno32 <span class="comment"># 设置ONBOOT=yes 即开启自动启用网络连接</span></span><br><span class="line">$ service network restart 重启网络</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="centos" scheme="http://oje.pw/tags/centos/"/>
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos git升级</title>
    <link href="http://oje.pw/2018/04/01/centos-git/"/>
    <id>http://oje.pw/2018/04/01/centos-git/</id>
    <published>2018-04-01T08:37:00.000Z</published>
    <updated>2018-04-01T08:39:10.456Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装编译git时需要的包</span></span><br><span class="line">$ yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">$ yum install  gcc perl-ExtUtils-MakeMaker</span><br><span class="line"><span class="comment"># 删除已有的git</span></span><br><span class="line">$ yum remove git</span><br><span class="line"><span class="comment"># 下载git源码</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/src</span><br><span class="line">$ wget https://www.kernel.org/pub/software/scm/git/git-2.0.5.tar.gz</span><br><span class="line">$ tar xzf git-2.0.5.tar.gz</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ <span class="built_in">cd</span> git-2.0.5</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span>/git all</span><br><span class="line">$ make prefix=/usr/<span class="built_in">local</span>/git install</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:/usr/local/git/bin"</span> &gt;&gt; /etc/bashrc</span><br><span class="line">$ <span class="built_in">source</span> /etc/bashrc</span><br><span class="line"><span class="comment"># 检查一下版本号</span></span><br><span class="line">$ git --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="centos" scheme="http://oje.pw/tags/centos/"/>
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
      <category term="git" scheme="http://oje.pw/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Centos yum,npm源更换</title>
    <link href="http://oje.pw/2018/04/01/centos-yum-npm/"/>
    <id>http://oje.pw/2018/04/01/centos-yum-npm/</id>
    <published>2018-04-01T08:24:57.000Z</published>
    <updated>2018-04-01T08:44:45.264Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum源更换</span></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">$ <span class="built_in">cd</span> /etc/yum.repos.d/﻿​</span><br><span class="line">$ wget http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line"><span class="comment"># 生成缓存：</span></span><br><span class="line">$ yum clean all</span><br><span class="line">$ yum makecache﻿​</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm源更换</span></span><br><span class="line">$ <span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span>﻿​</span><br><span class="line"><span class="comment"># npm升级</span></span><br><span class="line">$ npm update npm﻿​</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="centos" scheme="http://oje.pw/tags/centos/"/>
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
      <category term="yum" scheme="http://oje.pw/tags/yum/"/>
    
      <category term="npm" scheme="http://oje.pw/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>ADB常用命令</title>
    <link href="http://oje.pw/2018/04/01/adb/"/>
    <id>http://oje.pw/2018/04/01/adb/</id>
    <published>2018-04-01T08:04:54.000Z</published>
    <updated>2018-04-01T08:15:20.317Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices <span class="comment"># 查看设备</span></span><br><span class="line">$ adb install -r &lt;package&gt; <span class="comment">#安装apk</span></span><br><span class="line">$ adb uninstall &lt;package&gt; <span class="comment">#卸载apk</span></span><br><span class="line">$ adb -s 设备号 install xxx.apk </span><br><span class="line"><span class="comment">#从模拟器或手机中复制一个文件或文件夹（递归的）使用：</span></span><br><span class="line">$ adb pull &lt;remote&gt; &lt;<span class="built_in">local</span>&gt;</span><br><span class="line"><span class="comment">#复制一个文件或文件夹（递归的）到模拟器或手机中使用：</span></span><br><span class="line">$ adb push &lt;<span class="built_in">local</span>&gt; &lt;remote&gt;</span><br><span class="line"><span class="comment">#在这个命令中和引用的是文件或文件夹的路径，在开发用电脑上的是local，在模拟器或手机上的是remote</span></span><br><span class="line">$ adb start-server <span class="comment">#启动adb server</span></span><br><span class="line">$ adb <span class="built_in">kill</span>-server <span class="comment">#停止adb server</span></span><br><span class="line"><span class="comment"># 列出系统应用的所有包名：</span></span><br><span class="line">$ adb shell pm list packages -s</span><br><span class="line"><span class="comment"># 列出除了系统应用的第三方应用包名：</span></span><br><span class="line">$ adb shell pm list packages -3</span><br><span class="line"><span class="comment"># 使用 grep 来过滤：</span></span><br><span class="line">$ adb shell pm list packages | grep qq</span><br><span class="line"><span class="comment"># 清除应用数据与缓存</span></span><br><span class="line">$ adb shell pm clear &lt;packagename&gt;</span><br><span class="line"><span class="comment"># 启动应用</span></span><br><span class="line">$ adb shell am start -n 包名/类名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="adb" scheme="http://oje.pw/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>airmon-ng简要操作</title>
    <link href="http://oje.pw/2018/04/01/kali-airmon-ng/"/>
    <id>http://oje.pw/2018/04/01/kali-airmon-ng/</id>
    <published>2018-04-01T07:14:59.000Z</published>
    <updated>2018-04-01T07:45:27.894Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ airmon-ng check <span class="built_in">kill</span> <span class="comment"># 杀进程</span></span><br><span class="line">$ airmon-ng start wlan0 <span class="comment"># 启动无效网卡</span></span><br><span class="line">$ airodump-ng wlan0mon <span class="comment"># 探测</span></span><br><span class="line"><span class="comment"># 抓包</span></span><br><span class="line">$ airodump-ng --bssid XX:XX:XX:XX:XX:XX -c 1 -w testap wlan0mon</span><br><span class="line">--bssid 是路由器的mac地址</span><br><span class="line">-w 是写入到文件longas中</span><br><span class="line">-c 11 是频道11</span><br><span class="line"><span class="comment"># 攻击</span></span><br><span class="line">$ aireplay-ng -0 0 -a XX:XX:XX:XX:XX:XX -c XX:XX:XX:XX:XX:XX wlan0mon</span><br><span class="line">-0 采用deauth攻击模式，后面跟上攻击次数</span><br><span class="line">-a 后跟路由器的mac地址</span><br><span class="line">-c 后跟客户端的mac地址</span><br><span class="line"><span class="comment"># 直接破解</span></span><br><span class="line">$ aircrack-ng -w Wordlists.txt CAP-01.cap</span><br><span class="line"><span class="comment"># 转换后用hashcat跑</span></span><br><span class="line">$ cap2hccapx.exe testap.cap test.hccapx</span><br><span class="line">$ hashcat64.exe -m 2500 -D 2 test.hccapx pass.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="kali" scheme="http://oje.pw/tags/kali/"/>
    
      <category term="airmon-ng" scheme="http://oje.pw/tags/airmon-ng/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu静态ip和ssh配置</title>
    <link href="http://oje.pw/2018/04/01/ubuntu-ip-xshell/"/>
    <id>http://oje.pw/2018/04/01/ubuntu-ip-xshell/</id>
    <published>2018-04-01T06:34:16.000Z</published>
    <updated>2018-04-01T08:30:32.888Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改静态ip</span></span><br><span class="line">$ vim /etc/network/interfaces</span><br><span class="line">auto eth0</span><br><span class="line">    iface eth0 inet static</span><br><span class="line">    address 192.168.1.100</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 192.168.1.1</span><br><span class="line"><span class="comment"># DNS解析</span></span><br><span class="line">$ vim /etc/resolv.conf</span><br><span class="line">    nameserver 192.168.1.1</span><br><span class="line">$ vim /etc/resolvconf/resolv.conf.d/base</span><br><span class="line">    nameserver 192.168.1.1</span><br><span class="line"><span class="comment"># 要将/etc/NetworkManager/目录下的system-connections删除，或者移动到其他目录下</span></span><br><span class="line">$ sudo/etc/init.d/networking restart <span class="comment"># 重启网卡</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">$ sudo apt-get install openssh-server <span class="comment"># 安装</span></span><br><span class="line">$ ps -e |grep ssh <span class="comment"># 查看</span></span><br><span class="line">$ /etc/init.d/ssh start <span class="comment"># 启动</span></span><br><span class="line"><span class="comment"># 如果无法启动</span></span><br><span class="line">$ vim /etc/ssh/sshd_config </span><br><span class="line"><span class="comment"># 将 PermitRootLogin改为yes：</span></span><br><span class="line">$ sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
      <category term="ip" scheme="http://oje.pw/tags/ip/"/>
    
      <category term="ssl" scheme="http://oje.pw/tags/ssl/"/>
    
      <category term="ubuntu" scheme="http://oje.pw/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装ftp和smaba</title>
    <link href="http://oje.pw/2018/04/01/ubuntu-ftp-smaba/"/>
    <id>http://oje.pw/2018/04/01/ubuntu-ftp-smaba/</id>
    <published>2018-04-01T06:33:27.000Z</published>
    <updated>2018-04-01T08:30:25.571Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 ftp</span></span><br><span class="line">$ apt-get install vsftpd</span><br><span class="line"><span class="comment"># 添加用户和权限</span></span><br><span class="line"><span class="comment"># 新建"/home/uftp"目录作为用户主目录</span></span><br><span class="line"><span class="comment"># 新建用户uftp并设置密码</span></span><br><span class="line">$ sudo useradd -d /home/uftp -s /bin/bash uftp</span><br><span class="line">$ passwd uftp XXX</span><br><span class="line">$ vim /etc/vsftpd.conf <span class="comment"># 配置文件</span></span><br><span class="line">    userlist_deny=NO</span><br><span class="line">    userlist_enable=YES </span><br><span class="line">    userlist_file=/etc/allowed_users</span><br><span class="line">    seccomp_sandbox=NO</span><br><span class="line">    chroot_list_enable=YES</span><br><span class="line">　　chroot_list_file=/etc/chroot_list</span><br><span class="line"><span class="comment"># 添加用户uftp到allowed_users,chroot_list</span></span><br><span class="line">$ vim /etc/allowed_users</span><br><span class="line">$ vim /etc/chroot_list</span><br><span class="line"><span class="comment"># 启动/关闭/重启服务</span></span><br><span class="line">$ sudo /etc/init.d/vsftpd start</span><br><span class="line">$ sudo /etc/init.d/vsftpd stop</span><br><span class="line">$ sudo /etc/init.d/vsftpd restart</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 samba</span></span><br><span class="line">$ sudo apt-get install samba</span><br><span class="line"><span class="comment"># smbclient: </span></span><br><span class="line">$ sudo apt-get install smbclient</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">$ vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># 在文件末尾加上如下[share]（相当于在home目录项增加了一个新用户）</span></span><br><span class="line">[share]</span><br><span class="line">comment = Share Folder require password</span><br><span class="line">browseable = yes</span><br><span class="line">path = /home/share</span><br><span class="line">create mask = 0777</span><br><span class="line">directory mask = 0777</span><br><span class="line">valid users = share</span><br><span class="line">force user = nobody</span><br><span class="line">force group = nogroup</span><br><span class="line">public = yes</span><br><span class="line">writable = yes</span><br><span class="line">available = yes</span><br><span class="line"><span class="comment"># 保存退出后重启samba：</span></span><br><span class="line">$ sudo /etc/init.d/samba restart</span><br><span class="line"><span class="comment"># 切换到 /home/目录下创建一个用户目录：</span></span><br><span class="line">$ sudo mkdir share</span><br><span class="line"><span class="comment"># 设置目录的权限：（777代表最高权限，可读可写可执行）</span></span><br><span class="line">$ chmod 777 share</span><br><span class="line"><span class="comment"># 添加用户到samba</span></span><br><span class="line">$ smbpasswd -a starbucks</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
      <category term="ubuntu" scheme="http://oje.pw/tags/ubuntu/"/>
    
      <category term="ftp" scheme="http://oje.pw/tags/ftp/"/>
    
      <category term="smaba" scheme="http://oje.pw/tags/smaba/"/>
    
  </entry>
  
  <entry>
    <title>Mysql简单安装配置</title>
    <link href="http://oje.pw/2018/04/01/mysql-init/"/>
    <id>http://oje.pw/2018/04/01/mysql-init/</id>
    <published>2018-04-01T04:54:42.000Z</published>
    <updated>2018-04-01T08:55:15.850Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">my.ini</span><br><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line">default-character-set=utf8 </span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line">port = 3306 </span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line">basedir=D:\mysql\mysql-5.6.17-winx64</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line">datadir=D:\mysql\mysql-5.6.17-winx64\data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="win-mysql"><a href="#win-mysql" class="headerlink" title="win-mysql"></a>win-mysql</h2><h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> D:\mysql\mysql-5.6.17-winx64\bin</span><br><span class="line">$ mysqld install <span class="comment"># 安装服务</span></span><br><span class="line">$ mysqld remove <span class="comment"># 卸载服务</span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ net start mysql <span class="comment"># 启动服务</span></span><br><span class="line"><span class="comment"># 先删除 mysql 下的data文件夹</span></span><br><span class="line">$ mysqld --initialize <span class="comment"># 初始化</span></span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ net stop MySQL <span class="comment"># 关闭服务</span></span><br><span class="line">$ mysqld --skip-grant-tables <span class="comment"># 用安全模式打开</span></span><br><span class="line">$ mysql -u root -p <span class="comment"># 登录，密码为空，直接回车</span></span><br><span class="line">$ use mysql</span><br><span class="line">$ <span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'123'</span>);</span><br></pre></td></tr></table></figure><h3 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p <span class="comment"># 回车输入密码</span></span><br><span class="line">$ mysqladmin -u root -p password 密码 <span class="comment"># 设置密码</span></span><br></pre></td></tr></table></figure><h3 id="远程登入"><a href="#远程登入" class="headerlink" title="远程登入"></a>远程登入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ use mysql</span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">$ GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'root'</span> WITH GRANT OPTION; </span><br><span class="line"><span class="comment"># 刷新</span></span><br><span class="line">$ flush privileges;</span><br><span class="line"><span class="comment"># 查看是否成功</span></span><br><span class="line">$ select host,user from user;</span><br></pre></td></tr></table></figure><h2 id="linux-mysql"><a href="#linux-mysql" class="headerlink" title="linux-mysql"></a>linux-mysql</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">$ rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">$ yum install mysql-community-server</span><br></pre></td></tr></table></figure><h3 id="启动-关闭服务"><a href="#启动-关闭服务" class="headerlink" title="启动/关闭服务"></a>启动/关闭服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysqld restart/stop</span><br></pre></td></tr></table></figure><h3 id="设置密码-1"><a href="#设置密码-1" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root <span class="comment"># 首次无密</span></span><br><span class="line">$ use mysql</span><br><span class="line">$ <span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'123'</span>);</span><br></pre></td></tr></table></figure><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户</span></span><br><span class="line">$ grant all privileges on *.* to root@<span class="string">'%'</span>identified by <span class="string">'password'</span></span><br><span class="line"><span class="comment"># 如果是新用户而不是root，则要先新建用户</span></span><br><span class="line">$ create user <span class="string">'username'</span>@<span class="string">'%'</span> identified by <span class="string">'password'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;my.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysql]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql客户端默认字符集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-character-set=utf8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#设置3306端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port = 3306 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql的安装目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basedir=D:\mysql\mysql-5.6.17-winx64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置mysql数据库的数据的存放目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datadir=D:\mysql\mysql-5.6.17-winx64\data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 允许最大连接数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_connections=200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 服务端使用的字符集默认为8比特编码的latin1字符集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;character-set-server=utf8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建新表时将使用的默认存储引擎&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-storage-engine=INNODB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据库" scheme="http://oje.pw/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="mysql" scheme="http://oje.pw/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>IDEA top10热键</title>
    <link href="http://oje.pw/2018/04/01/idea-hot-key/"/>
    <id>http://oje.pw/2018/04/01/idea-hot-key/</id>
    <published>2018-04-01T04:54:04.000Z</published>
    <updated>2018-04-01T05:09:40.707Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Top 10 切来切去：Ctrl+Tab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 9 选你所想：Ctrl+W</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 8 代码生成：Template/Postfix +Tab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 7 发号施令：Ctrl+Shift+A</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 6 无处藏身：Shift+Shift</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 5 自动完成：Ctrl+Shift+Enter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 4 创造万物：Alt+Insert</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 3 自我修复：Alt+Enter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 2 重构一切：Ctrl+Shift+Alt+T</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Top 1 智能补全：Ctrl+Shift+Space</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="idea" scheme="http://oje.pw/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="http://oje.pw/2018/04/01/mongodb-basis/"/>
    <id>http://oje.pw/2018/04/01/mongodb-basis/</id>
    <published>2018-04-01T04:16:24.000Z</published>
    <updated>2018-04-01T05:04:56.903Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> d:/soft/mongodb/bin</span><br><span class="line"><span class="comment"># 设置log和data路径，需要创建data文件夹</span></span><br><span class="line">$ mongod.exe --logpath E:\DB\MONGO_DB\mongodb.log --logappend</span><br><span class="line"> --dbpath E:\DB\MONGO_DB\data --directoryperdb --serviceName MongoDB -install </span><br><span class="line">$ net start MongoDB <span class="comment"># 启动服务</span></span><br><span class="line">$ net stop MongoDB <span class="comment"># 停止服务</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="mongo基础使用"><a href="#mongo基础使用" class="headerlink" title="mongo基础使用"></a>mongo基础使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ db.getCollection(<span class="string">'email_zero'</span>).find(&#123;&#125;) <span class="comment"># 查询表</span></span><br><span class="line">$ db.email_zero.stats() <span class="comment"># 表信息</span></span><br><span class="line">$ db.email_zero.ensureIndex(&#123;<span class="string">"email"</span>:1&#125;) <span class="comment"># 建立索引</span></span><br><span class="line">$ db.email_zero.find(&#123;<span class="string">"email"</span>:<span class="string">"123@163.com"</span>&#125;).pretty() <span class="comment"># 查询例子</span></span><br><span class="line"><span class="comment"># 导出数据</span></span><br><span class="line">$ mongoexport -d admin -c mydb --csv -f tid,uid,username,isupdate,phone -o mydb.dat</span><br></pre></td></tr></table></figure><h4 id="去重脚本"><a href="#去重脚本" class="headerlink" title="去重脚本"></a>去重脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var rs = db.email_zero.aggregate([&#123;<span class="variable">$group</span>:&#123;_id:<span class="string">"email"</span>,count:&#123;<span class="variable">$sum</span>:1&#125;&#125;&#125;,&#123;<span class="variable">$match</span>:&#123;count:&#123;<span class="variable">$gt</span>:1&#125;&#125;&#125;])</span><br><span class="line"><span class="keyword">for</span>(var i <span class="keyword">in</span> rs.result)&#123;</span><br><span class="line">    var r = rs.result[1].count;</span><br><span class="line">    var k = rs.result[1]._id;</span><br><span class="line">    <span class="keyword">for</span>(var ii=0;ii&lt;r-1;ii++)&#123;</span><br><span class="line">        db.biu.remove(&#123;<span class="string">"email"</span>:k&#125;,<span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; d:/soft/mongodb/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置log和data路径，需要创建data文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mongod.exe --logpath E:\DB\MONGO_DB\mongodb.log --logappend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --dbpath E:\DB\MONGO_DB\data --directoryperdb --serviceName MongoDB -install &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ net start MongoDB &lt;span class=&quot;comment&quot;&gt;# 启动服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ net stop MongoDB &lt;span class=&quot;comment&quot;&gt;# 停止服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据库" scheme="http://oje.pw/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="mongodb" scheme="http://oje.pw/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="http://oje.pw/2018/04/01/learn-hexo/"/>
    <id>http://oje.pw/2018/04/01/learn-hexo/</id>
    <published>2018-04-01T03:18:40.000Z</published>
    <updated>2018-04-01T03:29:53.526Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli​  <span class="comment">#hexo</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 less</span></span><br><span class="line"><span class="comment"># 主题默认使用 less 作为 css 预处理工具。</span></span><br><span class="line">$ npm install hexo-renderer-less --save</span><br><span class="line"><span class="comment"># 安装 feed</span></span><br><span class="line"><span class="comment"># 用于生成 rss。</span></span><br><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line"><span class="comment"># 安装 json-content</span></span><br><span class="line"><span class="comment"># 用于生成静态站点数据，用作站内搜索的数据源。</span></span><br><span class="line">$ npm install hexo-generator-json-content --save</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h4 id="hexo命令"><a href="#hexo命令" class="headerlink" title="hexo命令"></a>hexo命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post title</span><br><span class="line">$ hexo -d 提交只git</span><br><span class="line">$ hexo -w 监视文章文件变动</span><br><span class="line">$ hexo -s 启动服务</span><br><span class="line">$ hexo -g 生成页面</span><br><span class="line">$ hexo list &lt;<span class="built_in">type</span>&gt;</span><br><span class="line">$ hexo --safe  安全模式</span><br><span class="line">$ hexo --debug 调试模式</span><br><span class="line">$ hexl --slient 简洁模式</span><br><span class="line"><span class="comment"># 重新安装hexo-util </span></span><br><span class="line">$ npm install -- save-dev hexo-util</span><br><span class="line"><span class="comment"># 如果出现</span></span><br><span class="line"><span class="comment"># Block-scoped declarations (let, const, function, class) not yet supported outside strict mode</span></span><br><span class="line">$ <span class="string">'use strict'</span></span><br></pre></td></tr></table></figure><h4 id="其他插件"><a href="#其他插件" class="headerlink" title="其他插件"></a>其他插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-addlink：在文章最末添加永久链接及版权声明，建议安装</span></span><br><span class="line"><span class="comment"># hexo-generator-search: 本地搜索</span></span><br><span class="line"><span class="comment"># hexo-index-anything: 更改首页为任意的页面</span></span><br><span class="line"><span class="comment"># hexo-encrypt：加密你的博客</span></span><br><span class="line"><span class="comment"># hexo-ruby-character 文字拼音</span></span><br><span class="line"><span class="comment"># hexo Tag Cloud 标签云</span></span><br><span class="line"><span class="comment"># hexo-uuid</span></span><br><span class="line"><span class="comment"># sitemap 站点地图</span></span><br><span class="line">$ npm install hexo-generator-searchdb --save</span><br><span class="line">$ npm uninstall﻿​</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli​  &lt;span class=&quot;comment&quot;&gt;#hexo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/iissnan/hexo-theme-next themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="http://oje.pw/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="http://oje.pw/2018/04/01/git/"/>
    <id>http://oje.pw/2018/04/01/git/</id>
    <published>2018-04-01T02:31:47.000Z</published>
    <updated>2018-04-01T04:30:48.787Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"***@**.com"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email"</span></span><br><span class="line">$ ssh -T git@git.oschina.net  $ ssh -T git@github.com</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><h4 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.editor emacs</span><br></pre></td></tr></table></figure><h4 id="代码比较"><a href="#代码比较" class="headerlink" title="代码比较"></a>代码比较</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure><h4 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择一个合适的地方，创建一个空目录：</span></span><br><span class="line">$ mkdir xxoo</span><br><span class="line">$ <span class="built_in">cd</span> xxoo</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line"><span class="comment"># 把这个目录变成Git可以管理的仓库：</span></span><br><span class="line">$ git init</span><br><span class="line"><span class="comment"># 1.把文件添加到仓库</span></span><br><span class="line">$ git add readme.txt</span><br><span class="line"><span class="comment"># 2.把文件提交到仓库</span></span><br><span class="line">$ git commit -m <span class="string">"wrote a readme file"</span></span><br><span class="line"><span class="comment"># 检查文件状态</span></span><br><span class="line">$ git status</span><br><span class="line"><span class="comment"># 忽略某些文件</span></span><br><span class="line">$ cat .gitignore</span><br><span class="line">    *.[oa]</span><br><span class="line">    *~</span><br><span class="line"><span class="comment"># 查看尚未暂存的文件更新了哪些部分</span></span><br><span class="line">$ git diff</span><br><span class="line"><span class="comment"># 要看已经暂存起来的文件和上次提交时的快照之间的差异</span></span><br><span class="line">$ git diff - staged</span><br><span class="line"><span class="comment"># 提交更新</span></span><br><span class="line">$ git commit -m <span class="string">"xxx"</span></span><br><span class="line"><span class="comment"># 跳过使用暂存区域</span></span><br><span class="line">$ git commit -a -m <span class="string">"xxx"</span></span><br><span class="line"><span class="comment"># 移除文件 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强删除选项 -f</span></span><br><span class="line">$ git rm xxx</span><br><span class="line"><span class="comment"># 仅是从跟踪清单中删除</span></span><br><span class="line">$ git rm --cached XXX</span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line">$ git <span class="built_in">log</span> --pretty=oneline</span><br></pre></td></tr></table></figure><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 版本回退 git 用head表示当前版本 head^上一个版本</span></span><br><span class="line">$ git reset --hard HEAD^</span><br><span class="line"><span class="comment"># 回到任意版本</span></span><br><span class="line">$ git reset --hard commitId</span><br><span class="line"><span class="comment"># 用来记录你的每一次命令：</span></span><br><span class="line">$ git reflog</span><br><span class="line"><span class="comment"># 撤销修改(文件在工作区的修改全部撤销)</span></span><br><span class="line"><span class="comment"># 一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</span></span><br><span class="line"><span class="comment"># 一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</span></span><br><span class="line">$ git checkout -- file</span><br><span class="line"><span class="comment"># 暂存区的修改撤销掉（unstage），重新放回工作区</span></span><br><span class="line">$ git reset HEAD file</span><br></pre></td></tr></table></figure><h4 id="远程仓库github"><a href="#远程仓库github" class="headerlink" title="远程仓库github"></a>远程仓库github</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@oschina.net:***/***.git</span><br><span class="line"><span class="comment"># 本地库push到github （第一次用-u，后面就不用）</span></span><br><span class="line">$ git push -u origin master </span><br><span class="line"><span class="comment"># 克隆别人项目(mycode 自定义目录名称)</span></span><br><span class="line">$ git <span class="built_in">clone</span> git://url mycode</span><br><span class="line"><span class="comment"># 查看远程仓库(详情)</span></span><br><span class="line">$ git remote -v</span><br></pre></td></tr></table></figure><h4 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数表示创建并切换</span></span><br><span class="line">$ git checkout -b dev</span><br><span class="line"><span class="comment"># 查看当前分支 *</span></span><br><span class="line">$ git branch</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">$ git checkout master</span><br><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">$ git merge dev</span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d dev</span><br><span class="line"><span class="comment"># 强行删除未合并分支</span></span><br><span class="line">$ git branch -D name</span><br><span class="line"><span class="comment"># 分支合并图</span></span><br><span class="line">$ git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br><span class="line"><span class="comment"># 禁用fast forward</span></span><br><span class="line">$ git merge --no--ff -m <span class="string">"xxoo"</span> dev</span><br><span class="line"><span class="comment"># 1.可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：</span></span><br><span class="line"><span class="comment"># 2.创建bug分支，临时分支</span></span><br><span class="line"><span class="comment"># 3.切回分支 查看工作区</span></span><br><span class="line"><span class="comment"># 4.回复工作区</span></span><br><span class="line">$ git stash</span><br><span class="line">$ git checkout -b issue-101</span><br><span class="line">$ git stash list</span><br><span class="line">$ git stash apply $ git stash drop</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ git stash pop</span><br><span class="line"><span class="comment"># 多次stash，再恢复指定stash</span></span><br><span class="line">$ git stash apply stash&#123;*&#125;</span><br></pre></td></tr></table></figure><h4 id="推送分支到远程-多人管理"><a href="#推送分支到远程-多人管理" class="headerlink" title="推送分支到远程(多人管理)"></a>推送分支到远程(多人管理)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br><span class="line"><span class="comment"># git pull把最新的提交从origin/dev抓下来，然后，在本地合并，解决冲突，再推送</span></span><br><span class="line">$ git pull</span><br><span class="line"><span class="comment"># git pull也失败了，原因是没有指定本地dev分支与远程origin/dev分支的链接，根据提示，设置dev和origin/dev的链接：</span></span><br><span class="line">$ git branch --<span class="built_in">set</span>-upstream dev origin/dev</span><br></pre></td></tr></table></figure><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打标签+id</span></span><br><span class="line">$ git tag v1.0 123456</span><br><span class="line"><span class="comment"># 查看标签详情</span></span><br><span class="line">$ git show v1.0</span><br><span class="line"><span class="comment"># 还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字：</span></span><br><span class="line">$ git tag -a v1.0 -m <span class="string">'xxoo'</span> 123456</span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">$ git tag -d v1.0</span><br><span class="line"><span class="comment"># 推到远程,一次性推送全部尚未推送到远程的本地标签：</span></span><br><span class="line">$ git push origin v1.0</span><br><span class="line">$ git push origin --tags</span><br><span class="line"><span class="comment"># 如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：</span></span><br><span class="line">$ git tag -d v1.0</span><br><span class="line"><span class="comment"># 然后，从远程删除。删除命令也是push，但是格式如下：</span></span><br><span class="line">$ git push origin :refs/tags/v1.0</span><br></pre></td></tr></table></figure><h4 id="推送失败"><a href="#推送失败" class="headerlink" title="推送失败"></a>推送失败</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> to .git/config</span><br><span class="line">$ vim vonfig </span><br><span class="line"><span class="comment"># url = </span></span><br><span class="line">$ git pull --rebase origin master</span><br><span class="line"><span class="comment"># 执行上面代码后可以看到本地代码库中多了README.md文件</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;***@**.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T git@git.oschina.net  $ ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="git" scheme="http://oje.pw/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>黑盒测试清单</title>
    <link href="http://oje.pw/2018/04/01/black-box-test/"/>
    <id>http://oje.pw/2018/04/01/black-box-test/</id>
    <published>2018-04-01T01:41:21.000Z</published>
    <updated>2018-04-01T04:52:34.579Z</updated>
    
    <content type="html"><![CDATA[<p>这个备忘单是一个对WEB应用程序执行黑盒测试的任务清单,这个清单可以当成有经验的测试老手的备忘录、结合<a href="https://www.owasp.org/index.php/OWASP_Testing_Project" target="_blank" rel="noopener">OWASP测试指南</a>一起使用。<br><a id="more"></a></p><h2 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h2><ul><li>手动访问站点</li><li>使用爬虫来抓取（手工）无法访问或隐藏的内容</li><li>检查泄露信息的文件，如robots.txt, sitemap.xml, .DS_Store</li><li>检查主要的搜索引擎索引的此站点的公开内容</li><li>检查不同的浏览器UA获取的内容的差异（如使用爬虫的UA访问手机站点）</li><li>检查WEB应用程序的指纹（Fingerprinting）</li><li>确认使用的技术</li><li>确认用户角色</li><li>确认应用程序的入口地址</li><li>确认客户端代码</li><li>确认不同的版本的差异（如web, mobile web, mobile app, web services）</li><li>确认位于同一主机或业务相关的应用程序</li><li>确认所有的主机名和端口</li><li>确认第三方的托管内容</li></ul><h2 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h2><ul><li>检查常用的应用程序和管理URL</li><li>检查旧文件、备份文件和未引用文件是否存在</li><li><a href="http://www.hackdig.com/?01/hack-11.htm" target="_blank" rel="noopener">检查支持的HTTP方法和XST漏洞</a></li><li>检查对文件后缀的处理</li><li><a href="http://www.hackdig.com/?07/hack-4958.htm" target="_blank" rel="noopener">检查安全HTTP头</a>（如CSP, X-Frame-Options, HSTS）</li><li>测试安全策略（如Flash, Silverlight, robots）</li><li>在线上环境测试非生产数据或做相反的操作</li><li>检查客户端代码中的敏感信息（如API keys,凭据等）</li></ul><h2 id="安全传输"><a href="#安全传输" class="headerlink" title="安全传输"></a>安全传输</h2><ul><li>检查SSL版本、算法和密钥长度</li><li>检查数字证书有效性</li><li>检查凭据是否只通过HTTPS传输数据</li><li>检查登陆表单是否只通过HTTPS传输数据</li><li>检查会话令牌是否只通过HTTPS传输</li><li>检查是否使用了HSTS</li></ul><h2 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h2><ul><li>测试枚举用户</li><li>测试认证绕过</li><li>测试暴力破解保护</li><li>测试密码规则的质量</li><li>测试记住密码功能</li><li>测试密码表单的自动完成的功能</li><li>测试密码重置和找回</li><li>测试密码修改流程</li><li>测试验证码</li><li>测试多因子认证</li><li>测试注销功能</li><li>测试HTTP的缓存管理（如Pragma, Expires, Max-age）</li><li>测试默认登陆账号</li><li>测试用户认证历史</li><li>测试账号锁定和密码修改成功的通知渠道</li><li>测试跨应用程序共享模式/SSO的一致性</li></ul><h2 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h2><ul><li>确定应用程序管理会话的方式（如将cookie tokens、url中的token）</li><li>检查会话cookie的标示(httpOnly和secure)</li><li>检查会话cookie的返回（path和domain）</li><li>检查会话cookie的有效期（expires和 max-age）</li><li>检查会话cookie的过期失效</li><li>检查会话cookie的相对超时失效</li><li>检查会话cookie退出后失效</li><li>测试用户是否可以同时拥有多个会话</li><li>测试会话cookie的随机性</li><li>确认会话令牌在登陆、角色变化和退出时的更新</li><li>测试跨应用共享session会话的一致性</li><li><a href="https://www.owasp.org/index.php/Testing_for_Session_puzzling_&#40;OTG-SESS-010&#41;" target="_blank" rel="noopener">测试会话过载</a>（未限制会话应用范围）</li><li>测试是否存在CSRF和点击劫持漏洞</li></ul><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><ul><li>测试路径遍历</li><li>测试绕过授权</li><li>测试垂直访问控制问题</li><li>测试水平访问控制问题</li><li>测试授权检查缺失</li></ul><h2 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h2><ul><li>测试反射型XSS</li><li>测试存储型XSS</li><li>测试DOM型XSS</li><li>测试CSF（flash XSS）</li><li>测试HTML注入</li><li>测试SQL注入</li><li>测试LDAP注入</li><li>测试ORM注入</li><li><a href="http://www.hackdig.com/?03/hack-8921.htm" target="_blank" rel="noopener">测试XML注入</a></li><li>测试XXE注入</li><li><a href="http://www.hackdig.com/?01/hack-7955.htm" target="_blank" rel="noopener">测试SSI注入</a></li><li>测试XPath注入</li><li>测试XQuery注入</li><li>测试IMAP/SMTP注入</li><li>测试Code注入</li><li><a href="https://www.owasp.org/index.php/Expression_Language_Injection" target="_blank" rel="noopener">测试EL注入</a></li><li>测试Command注入</li><li>测试Overflow （堆, 栈和整形溢出）</li><li>测试Format String（错误的字符串格式化）</li><li>测试incubated vulnerabilities（缺陷孵化）</li><li>测试HTTP Splitting/Smuggling（协议层）</li><li>测试HTTP Verb Tampering（权限干涉）</li><li>测试Open Redirection</li><li>测试本地文件包含</li><li>测试远程文件包含</li><li>比较客户端与服务端的验证规则</li><li>测试NoSQL注入</li><li>测试HTTP参数污染</li><li><a href="auto-binding:https://click.apache.org/docs/user-guide/html/ch02s03.html" target="_blank" rel="noopener">测试自动绑定</a></li><li>测试Mass Assignment（<a href="http://blog.xdite.net/posts/2012/03/05/github-hacked-rails-security/" target="_blank" rel="noopener">ror经典漏洞</a>）</li><li>测试NULL/Invalid Session Cookie</li></ul><h2 id="拒绝服务"><a href="#拒绝服务" class="headerlink" title="拒绝服务"></a>拒绝服务</h2><ul><li>测试反自动化/机器请求</li><li>测试账号锁定</li><li>测试HTTP 协议DoS</li><li>测试SQL通配符DoS/sleep Dos</li></ul><h2 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h2><ul><li>测试功能滥用</li><li>测试缺乏不可否认性（非对称加密作用）</li><li>测试信任关系</li><li>测试数据完整性</li><li>测试指责分离</li></ul><h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><ul><li>检查应加密数据是否加密</li><li>根据上下文检查是否使用了错误的算法</li><li>检查使用弱算法</li><li>检查是否合理使用盐</li><li>检查随机函数（的随机性）</li></ul><h2 id="风险功能—文件上传"><a href="#风险功能—文件上传" class="headerlink" title="风险功能—文件上传"></a>风险功能—文件上传</h2><ul><li>检查可接受的文件类型是否在白名单内</li><li>检查文件尺寸限制、上传频率和总文件数的阈值与限制情况</li><li>检查文件内容是否与定义的文件类型相符</li><li>检查所有上传的文件都经过杀毒软件扫描</li><li>检查不安全的文件名是否经过处理</li><li>检查不能在web根目录下直接访问上传文件</li><li>检查上传的文件是否存储在相同的主机名和端口</li><li>检查文件和其他媒体继承了身份验证和授权功能</li></ul><h2 id="风险功能—支付信息"><a href="#风险功能—支付信息" class="headerlink" title="风险功能—支付信息"></a>风险功能—支付信息</h2><ul><li>测试WEB服务器或应用程序是否存在已知漏洞和配置问题</li><li>测试默认或易被猜到的密码</li><li>测试生产环境的非生产数据或做相反的* 测试</li><li>测试注入漏洞</li><li>测试缓冲区溢出</li><li>测试不安全的加密存储</li><li>测试传输层保护不足</li><li>测试不适当的错误处理</li><li>测试CVSS v2 评分&gt; 4.0的全部漏洞</li><li>测试身份验证和授权的问题</li><li>测试CSRF</li></ul><h2 id="HTML-5"><a href="#HTML-5" class="headerlink" title="HTML 5"></a>HTML 5</h2><ul><li>测试WEB消息传递</li><li>测试WEB本地存储SQL注入</li><li>检查CORS的实现</li><li>检查离线的WEB应用程序</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个备忘单是一个对WEB应用程序执行黑盒测试的任务清单,这个清单可以当成有经验的测试老手的备忘录、结合&lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Testing_Project&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OWASP测试指南&lt;/a&gt;一起使用。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="测试" scheme="http://oje.pw/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="黑盒测试" scheme="http://oje.pw/tags/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>SQLMap</title>
    <link href="http://oje.pw/2018/04/01/sqlmap/"/>
    <id>http://oje.pw/2018/04/01/sqlmap/</id>
    <published>2018-04-01T01:06:49.000Z</published>
    <updated>2018-04-01T08:30:54.180Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判读是否有注入点﻿​</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span></span><br><span class="line"><span class="comment"># 获取数据库</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --dbs</span><br><span class="line"><span class="comment"># 当前使用数据库</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --current-db</span><br><span class="line"><span class="comment"># 获取指定库的所有表</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --table -D <span class="string">"数据库名"</span></span><br><span class="line"><span class="comment">#获取表中的字段</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --columns -T <span class="string">"表名"</span> -D <span class="string">"数据库名"</span></span><br><span class="line"><span class="comment">#读取指定字段内容</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --dump -C <span class="string">"字段，字段，字段"</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库名"</span></span><br><span class="line"><span class="comment">#(dump为转存数据）</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试注入点权限</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --privileges  <span class="comment">#所有用户权限</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --privileges -U sa  <span class="comment">#sa用户权限</span></span><br><span class="line"><span class="comment"># 执行shell命令</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --os-cmd=<span class="string">"net user"</span>   <span class="comment">#执行net user命令</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --os-shell    <span class="comment">#系统交互的shell</span></span><br><span class="line"><span class="comment">#执行sql命令</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --sql-shell   <span class="comment">#sql交互shell</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --sql-query=<span class="string">"sql语句"</span></span><br><span class="line"><span class="comment"># post提交方式</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --data <span class="string">"post参数"</span></span><br><span class="line"><span class="comment"># 显示详细等级</span></span><br><span class="line">    <span class="comment"># 0：只显示Python的回溯，错误和关键消息。 </span></span><br><span class="line">    <span class="comment"># 1：显示信息和警告消息。 </span></span><br><span class="line">    <span class="comment"># 2：显示调试消息。 </span></span><br><span class="line">    <span class="comment"># 3：有效载荷注入。 </span></span><br><span class="line">    <span class="comment"># 4：显示HTTP请求。 </span></span><br><span class="line">    <span class="comment"># 5：显示HTTP响应头。 </span></span><br><span class="line">    <span class="comment"># 6：显示HTTP响应页面的内容 </span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> -v 1  </span><br><span class="line"><span class="comment">#注入http请求</span></span><br><span class="line">$ python sqlmap.py -r head.txt --dbs</span><br><span class="line">    [head.txt</span><br><span class="line">    POST /login.php HTTP/1.1</span><br><span class="line">    Host:www.secbug.org</span><br><span class="line">    User-Agent:Mozilla/5.0</span><br><span class="line">    username=admin&amp;password=admin888]</span><br><span class="line"><span class="comment"># 直接连接数据库</span></span><br><span class="line">$ python sqlmap.py -d <span class="string">"mysql://admin:admin@127.0.0.1:3306/test"</span> --dbs</span><br><span class="line"><span class="comment"># 注入等级</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> --leavl 3</span><br><span class="line"><span class="comment"># 语句插入到指定位置</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'http://www.xxser.com/id/2*.html'</span> --dbs</span><br><span class="line"><span class="comment"># 使用插件</span></span><br><span class="line">$ python sqlmap.py -u <span class="string">'RUL'</span> -tamper <span class="string">"插件名"</span></span><br><span class="line"><span class="comment"># 获取帮助</span></span><br><span class="line">$ python sqlmap.py -h</span><br></pre></td></tr></table></figure><h4 id="🌰🌰🌰"><a href="#🌰🌰🌰" class="headerlink" title="🌰🌰🌰"></a>🌰🌰🌰</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 🌰：</span></span><br><span class="line">$ SELCECT *</span><br><span class="line">$ FORM products</span><br><span class="line">$ WHERE category = <span class="string">'bike'</span> AND <span class="string">'1'</span>=<span class="string">'2'</span></span><br><span class="line">$ UNION SELECT *</span><br><span class="line">$ FROM new_products;</span><br><span class="line"><span class="comment"># 🌰：</span></span><br><span class="line">$ SELECT *</span><br><span class="line">$ FROM products</span><br><span class="line">$ WHERE idproduct = 1+1 (?id=%2B1)(+的url编码%2B)</span><br><span class="line"><span class="comment"># 数据库注释</span></span><br><span class="line"><span class="comment"># SQLserver Oracle Postgresql </span></span><br><span class="line">    --(双联字符)</span><br><span class="line">    /*  */</span><br><span class="line"><span class="comment"># Mysql</span></span><br><span class="line">    --</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    /*  */</span><br><span class="line"><span class="comment"># 数据库服务器版本</span></span><br><span class="line"><span class="comment"># SQLserver  </span></span><br><span class="line">$ select @@version</span><br><span class="line"><span class="comment"># Mysql</span></span><br><span class="line">$ select version()</span><br><span class="line">$ select @@version</span><br><span class="line"><span class="comment"># Oracle</span></span><br><span class="line">$ select banner from v<span class="variable">$version</span></span><br><span class="line">$ select banner from v<span class="variable">$version</span> <span class="built_in">where</span> rownum=1</span><br><span class="line"><span class="comment"># Postgresql</span></span><br><span class="line">$ select version()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 判读是否有注入点﻿​&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 获取数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt; --dbs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 当前使用数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt; --current-db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 获取指定库的所有表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt; --table -D &lt;span class=&quot;string&quot;&gt;&quot;数据库名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#获取表中的字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt; --columns -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#读取指定字段内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python sqlmap.py -u &lt;span class=&quot;string&quot;&gt;&#39;RUL&#39;&lt;/span&gt; --dump -C &lt;span class=&quot;string&quot;&gt;&quot;字段，字段，字段&quot;&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#(dump为转存数据）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="kali" scheme="http://oje.pw/tags/kali/"/>
    
      <category term="sqlmap" scheme="http://oje.pw/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>kali源更换</title>
    <link href="http://oje.pw/2018/04/01/kali-sources-list-and-ss/"/>
    <id>http://oje.pw/2018/04/01/kali-sources-list-and-ss/</id>
    <published>2018-04-01T00:42:39.000Z</published>
    <updated>2018-04-01T08:31:35.217Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ vim  /etc/apt/sources.list​</span><br><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib​</span><br><span class="line">$ apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade ​</span><br><span class="line">$ apt-get clean﻿​</span><br><span class="line"><span class="comment"># apt-get dist-upgrade 更新系统以及所有依赖包</span></span><br><span class="line">$ apt-get installopen-vm-tools-desktop fuse <span class="comment">#安装开源vm tools</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="kali-ss"><a href="#kali-ss" class="headerlink" title="kali-ss"></a>kali-ss</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install qt5-qmake qtbase5-dev libbotan1.10-dev pkg-config debhelper libqrencode-dev libzbar-dev libappindicator-dev cmake <span class="comment"># 安装编译环境</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/shadowsocks/libQtShadowsocks.git <span class="comment">#克隆项目</span></span><br><span class="line">$ dpkg-buildpackage -uc -us -b</span><br><span class="line">$ dpkg -i ../libqtshadowsocks_1.10.0-1_amd64.deb ../libqtshadowsocks-dev_1.10.0-1_amd64.deb</span><br><span class="line"><span class="comment"># 若出错，则更改版本信息</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-qt5.git</span><br><span class="line">$ dpkg-buildpackage -uc -us -b</span><br><span class="line">$ dpkg -i ../shadowsocks-qt5_2.8.0-1_amd64.deb</span><br></pre></td></tr></table></figure><h4 id="win-ss"><a href="#win-ss" class="headerlink" title="win-ss"></a>win-ss</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><h4 id="tor-network-bridge"><a href="#tor-network-bridge" class="headerlink" title="tor-network-bridge"></a>tor-network-bridge</h4><p><a href="https://bridges.torproject.org/bridges?transport=obfs2" target="_blank" rel="noopener">obfs2网桥</a> 、<a href="https://bridges.torproject.org/bridges?transport=obfs3" target="_blank" rel="noopener">obfs3网桥</a>、<a href="https://bridges.torproject.org/bridges?transport=obfs4" target="_blank" rel="noopener">obfs4网桥（推荐）</a> 、<a href="https://bridges.torproject.org/bridges?transport=scramblesuit" target="_blank" rel="noopener">scramblesuit网桥</a></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ vim  /etc/apt/sources.list​&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#中科大&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib​&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ apt-get update &amp;amp;&amp;amp; apt-get upgrade &amp;amp;&amp;amp; apt-get dist-upgrade ​&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ apt-get clean﻿​&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# apt-get dist-upgrade 更新系统以及所有依赖包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ apt-get installopen-vm-tools-desktop fuse &lt;span class=&quot;comment&quot;&gt;#安装开源vm tools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="http://oje.pw/tags/linux/"/>
    
      <category term="kali" scheme="http://oje.pw/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>时间管理与方法论</title>
    <link href="http://oje.pw/2018/04/01/time-management/"/>
    <id>http://oje.pw/2018/04/01/time-management/</id>
    <published>2018-03-31T23:49:16.000Z</published>
    <updated>2018-04-01T00:21:57.887Z</updated>
    
    <content type="html"><![CDATA[<p>时间管理有很多种方法，而<a href="https://baike.baidu.com/item/GTD/7384910?fr=aladdin" target="_blank" rel="noopener">GTD</a>（全称：<em>Getting Things Done</em>）就是其中一套行之有效的方法，也是现在最受欢迎的方法。<em>Getting Things Done</em> 翻译成中文就是“把事情做完”，GTD的核心理念概括就是 “通过记录的方式把头脑中的各种事情移出来，然后整理安排自己去执行”。带着一些自己的理解，下面谈一谈我对GTD的理解以及方法论，GTD的核心步骤为五步：<strong>收集、处理、管理、执行、回顾。</strong><br><a id="more"></a><br><img src="/img/时间管理与方法论.jpg" alt="时间管理与方法论"></p><h4 id="收集-——-收集记录"><a href="#收集-——-收集记录" class="headerlink" title="收集 —— 收集记录"></a>收集 —— 收集记录</h4><p>人的大脑能储存很多东西，但有限，不要相信某事情发生后过了一段时间你还能记得，释放大脑的储存负载，让大脑着重于去思考，平时有什么信息、任务和灵感要在忘记之前用工具记录下来，使用的工具要尽可能的方便，易用，便捷。</p><h4 id="处理-——-处理分类"><a href="#处理-——-处理分类" class="headerlink" title="处理 —— 处理分类"></a>处理 —— 处理分类</h4><p>只有及时处理信息，对信息及时做出决定和归纳成类，你才能避免信息的堆积和碎片化，处理信息时采用二分钟法则和四象限法则，二分钟方法就是如果一件事情两分钟内能解决的事情，无论是何种事情，马上着手解决掉，如果不能再进行分类。分类则采用四象限法则，四象限法则是把工作按照重要和紧急两个不同的程度划分成四个“象限”：既紧急又重要、重要但不紧急、紧急但不重要、既不紧急也不重要。</p><p><img src="/img/四象限.jpg" alt="四象限"></p><h4 id="计划-——-计划安排"><a href="#计划-——-计划安排" class="headerlink" title="计划 —— 计划安排"></a>计划 —— 计划安排</h4><p>除了既有的日程安排外，可以设定每日，每周，每月，每年你需要完成的重大事件，把他们排进日程表。每天要做的事件采用三只青蛙理论，前天晚上睡觉前设定第二天最重要的三件事，起床后就可以开始着手这三件事了（同理可用于每月的“三只青蛙”, 每季度的“三只青蛙”，每年的“三只青蛙”）。每周要做的事采用习惯21天效应，一件事只要坚持21天就能习惯成自然，成为一种习惯。每月要做的事采用日历行程表的方法，将每月要做的事排进日程表。每年要做的事采用原望清单法，让自己每年都有收获和进步.</p><p><img src="/img/计划安排.jpg" alt="计划安排"><br><img src="/img/计划安排2.jpg" alt="计划安排2"></p><h4 id="执行-——-坚决执行"><a href="#执行-——-坚决执行" class="headerlink" title="执行 —— 坚决执行"></a>执行 —— 坚决执行</h4><p>执行是<em>Getting Things Done</em>最关键的一步，也是成功与否的关键，要言行一致，制定了计划就一定得做到，这能很好地提升你的自我认同感。执行时你应当在不分心的情境下，一次只执行一件事，既不要多线工作，也不要让你的工作突然中断。采用番茄工作法，将番茄时间设为25分钟，专注工作，中途不做任何与该任务无关的事，直到番茄时钟响起，然后短暂休息5分钟继续番茄时钟，每4个番茄时段可多休息一会儿。番茄工作法极大地提高了工作的效率，还会有意想不到的成就感。</p><p><img src="/img/番茄工作法.jpg" alt="番茄工作法"></p><h4 id="回顾-——-回顾检查"><a href="#回顾-——-回顾检查" class="headerlink" title="回顾 —— 回顾检查"></a>回顾 —— 回顾检查</h4><p>目前我采用的是一周回顾一次，采用PDCA循环法对长期目标、中期目标和短期目标进行回顾，对工作和其它事情进行回顾，看看哪里做的不好，需要改进，重新做出调整计划。这样能使得计划更有效地进行，更加合乎工作程序的逻辑。</p><p><img src="/img/PDCA.jpg" alt="PDCA"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间管理有很多种方法，而&lt;a href=&quot;https://baike.baidu.com/item/GTD/7384910?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GTD&lt;/a&gt;（全称：&lt;em&gt;Getting Things Done&lt;/em&gt;）就是其中一套行之有效的方法，也是现在最受欢迎的方法。&lt;em&gt;Getting Things Done&lt;/em&gt; 翻译成中文就是“把事情做完”，GTD的核心理念概括就是 “通过记录的方式把头脑中的各种事情移出来，然后整理安排自己去执行”。带着一些自己的理解，下面谈一谈我对GTD的理解以及方法论，GTD的核心步骤为五步：&lt;strong&gt;收集、处理、管理、执行、回顾。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="时间管理" scheme="http://oje.pw/categories/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="时间" scheme="http://oje.pw/tags/%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>google search</title>
    <link href="http://oje.pw/2018/03/31/g00gle-search/"/>
    <id>http://oje.pw/2018/03/31/g00gle-search/</id>
    <published>2018-03-31T13:29:45.000Z</published>
    <updated>2018-04-01T00:20:27.296Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索知乎上的相关话题："><a href="#搜索知乎上的相关话题：" class="headerlink" title="搜索知乎上的相关话题："></a>搜索知乎上的相关话题：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intext:<span class="string">"星巴克"</span> site:zhihu.com/question/</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="搜索百度网盘上的资料"><a href="#搜索百度网盘上的资料" class="headerlink" title="搜索百度网盘上的资料"></a>搜索百度网盘上的资料</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:<span class="string">"星巴克"</span> site:pan.baidu.com</span><br></pre></td></tr></table></figure><h2 id="日常生活类"><a href="#日常生活类" class="headerlink" title="日常生活类"></a>日常生活类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather/time/sunrise/sundown+Seattle</span><br></pre></td></tr></table></figure><h2 id="查询作者的全部作品"><a href="#查询作者的全部作品" class="headerlink" title="查询作者的全部作品"></a>查询作者的全部作品</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">books by Starbucks</span><br></pre></td></tr></table></figure><h2 id="查询几个信息（-、or-号的运用）"><a href="#查询几个信息（-、or-号的运用）" class="headerlink" title="查询几个信息（ + 、or 号的运用）"></a>查询几个信息（ + 、or 号的运用）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“星巴克 + Starbucks”</span><br><span class="line">“星巴克 or Starbucks”</span><br></pre></td></tr></table></figure><h2 id="找图片"><a href="#找图片" class="headerlink" title="找图片"></a>找图片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可以使用inurl语法迅速找到想要的图片</span><br><span class="line">搜索：“星巴克” inurl:photo</span><br><span class="line">可以用intitle语法找到这类网页。</span><br><span class="line">搜索：“intitle:“星巴克” picture”</span><br></pre></td></tr></table></figure><h2 id="找软件"><a href="#找软件" class="headerlink" title="找软件"></a>找软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1）直接以软件名称以及版本号为关键字查询。</span><br><span class="line">2）可以增加“下载”或者“download”为关键字。</span><br><span class="line">3）用“” 精确搜索，如：搜索：“winzip 8.0 下载”</span><br><span class="line">4）可以用inurl语法直接搜索这些下载目录</span><br><span class="line">搜索：PS inurl:download （搜索PS 软件下载）</span><br></pre></td></tr></table></figure><h2 id="“”-双引号"><a href="#“”-双引号" class="headerlink" title="“” 双引号"></a>“” 双引号</h2><p>表示完全匹配，搜索：“星巴克”</p><h2 id="A-B"><a href="#A-B" class="headerlink" title="A -B"></a>A -B</h2><p>搜索包含A但不包含B的结果（请注意A后面的空格不能省略）</p><h2 id="模糊搜索："><a href="#模糊搜索：" class="headerlink" title="模糊搜索："></a>模糊搜索：</h2><p>很多时候想搜一个东西但是不确定具体名字，可以用星号代替忘了的字，像搜 [星*克]；</p><h2 id="site-搜索结果局限于某个具体网站"><a href="#site-搜索结果局限于某个具体网站" class="headerlink" title="site 搜索结果局限于某个具体网站"></a>site 搜索结果局限于某个具体网站</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:starbucks.com.cn</span><br></pre></td></tr></table></figure><p>注意：site后的冒号为英文字符，而且，冒号后不能有空格，否则，“site:”将被作为一个搜索的关键字。此外，网站域名不能有“http”以及“www”前缀，也不能有任何“/”的目录后缀；</p><h2 id="link-返回所有链接到某个URL地址的网页。"><a href="#link-返回所有链接到某个URL地址的网页。" class="headerlink" title="link 返回所有链接到某个URL地址的网页。"></a>link 返回所有链接到某个URL地址的网页。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">示例：搜索所有含指向星巴克“www.starbucks.com.cn”链接的网页。</span><br><span class="line">搜索：“link:www.starbucks.com.cn”</span><br></pre></td></tr></table></figure><h2 id="inurl-用于搜索查询词出现在url-中的页面"><a href="#inurl-用于搜索查询词出现在url-中的页面" class="headerlink" title="inurl 用于搜索查询词出现在url 中的页面"></a>inurl 用于搜索查询词出现在url 中的页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">搜索：inurl:搜索引擎优化</span><br><span class="line">返回的结果都是网址url中包含“搜索引擎优化”的页面。由于关键词出现在url中对排名有一定影响，</span><br><span class="line">使用inurl:搜索可以更准确地找到竞争对手</span><br><span class="line">示例：搜索关于星巴克公司的PDF文档。</span><br><span class="line">搜索：inurl:pdf 星巴克 或者inurl:pdf 星巴克 简介</span><br></pre></td></tr></table></figure><h2 id="intitle-返回的是页面title-中包含关键词的页面"><a href="#intitle-返回的是页面title-中包含关键词的页面" class="headerlink" title="intitle 返回的是页面title 中包含关键词的页面"></a>intitle 返回的是页面title 中包含关键词的页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:“星巴克”</span><br></pre></td></tr></table></figure><h2 id="Allintitle-搜索返回的是页面标题中包含多组关键词的文件"><a href="#Allintitle-搜索返回的是页面标题中包含多组关键词的文件" class="headerlink" title="Allintitle 搜索返回的是页面标题中包含多组关键词的文件"></a>Allintitle 搜索返回的是页面标题中包含多组关键词的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">搜索：allintitle:Starbucks 星巴克</span><br><span class="line">就相当于：intitle:Starbucks intitle:星巴克</span><br></pre></td></tr></table></figure><h2 id="filetype-用于搜索特定文件格式。"><a href="#filetype-用于搜索特定文件格式。" class="headerlink" title="filetype 用于搜索特定文件格式。"></a>filetype 用于搜索特定文件格式。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">搜索：filetype:pdf Starbucks</span><br><span class="line">返回的就是包含Starbucks 这个关键词的所有pdf文件。</span><br></pre></td></tr></table></figure><h2 id="一些好玩的"><a href="#一些好玩的" class="headerlink" title="一些好玩的"></a>一些好玩的</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zerg rush <span class="comment"># 页面上方降下很多圆圈</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搜索知乎上的相关话题：&quot;&gt;&lt;a href=&quot;#搜索知乎上的相关话题：&quot; class=&quot;headerlink&quot; title=&quot;搜索知乎上的相关话题：&quot;&gt;&lt;/a&gt;搜索知乎上的相关话题：&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;intext:&lt;span class=&quot;string&quot;&gt;&quot;星巴克&quot;&lt;/span&gt; site:zhihu.com/question/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="google" scheme="http://oje.pw/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>Python代码风格和PEP8</title>
    <link href="http://oje.pw/2018/03/31/python-code-style-pep8/"/>
    <id>http://oje.pw/2018/03/31/python-code-style-pep8/</id>
    <published>2018-03-31T12:48:28.000Z</published>
    <updated>2018-04-01T00:20:14.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>常量 : 大写加下划线<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER_CONSTANT</span><br></pre></td></tr></table></figure></li></ul><p>对于不会发生改变的全局变量，使用大写加下划线。<br><a id="more"></a> </p><ul><li>私有变量 : 小写和一个前导下划线<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_private_value</span><br></pre></td></tr></table></figure></li></ul><p>Python 中不存在私有变量一说，若是遇到需要保护的变量，使用小写和一个前导下划线。但这只是程序员之间的一个约定，用于警告说明这是一个私有变量，外部类不要去访问它。但实际上，外部类还是可以访问到这个变量。</p><ul><li>内置变量 : 小写，两个前导下划线和两个后置下划线<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__class__</span><br></pre></td></tr></table></figure></li></ul><p>两个前导下划线会导致变量在解释期间被更名。这是为了避免内置变量和其他变量产生冲突。用户定义的变量要严格避免这种风格。以免导致混乱。<br><!--more--> </p><h2 id="函数和方法"><a href="#函数和方法" class="headerlink" title="函数和方法"></a>函数和方法</h2><p>总体而言应该使用，小写和下划线。但有些比较老的库使用的是混合大小写，即首单词小写，之后每个单词第一个字母大写，其余小写。但现在，小写和下划线已成为规范。</p><ul><li>私有方法 : 小写和一个前导下划线<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def _secrete(self):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Starbucks"</span>)</span><br></pre></td></tr></table></figure></li></ul><p>这里和私有变量一样，并不是真正的私有访问权限。同时也应该注意一般函数不要使用两个前导下划线(当遇到两个前导下划线时，Python 的名称改编特性将发挥作用)。</p><ul><li>特殊方法 ：小写和两个前导下划线，两个后置下划线<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def __add__(self, other):</span><br><span class="line">    <span class="built_in">return</span> int.__add__(other)</span><br></pre></td></tr></table></figure></li></ul><p>这种风格只应用于特殊函数，比如操作符重载等。</p><ul><li>函数参数 : 小写和下划线，缺省值等号两边无空格<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def connect(self, user=None):</span><br><span class="line">    self._user = user</span><br></pre></td></tr></table></figure></li></ul><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>类总是使用驼峰格式命名，即所有单词首字母大写其余字母小写。类名应该简明，精确，并足以从中理解类所完成的工作。常见的一个方法是使用表示其类型或者特性的后缀，例如:SQLEngine、MimeTypes。对于基类而言，可以使用一个 Base 或者 Abstract 前缀，例如:BaseCookie、AbstractGroup<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class UserProfile(object):</span><br><span class="line">    def __init__(self, profile):</span><br><span class="line">        <span class="built_in">return</span> self._profile = profile</span><br><span class="line"></span><br><span class="line">    def profile(self):</span><br><span class="line">        <span class="built_in">return</span> self._profile</span><br></pre></td></tr></table></figure></p><h2 id="模块和包"><a href="#模块和包" class="headerlink" title="模块和包"></a>模块和包</h2><p>除特殊模块 __init__ 之外，模块名称都使用不带下划线的小写字母。<br>若是它们实现一个协议，那么通常使用lib为后缀，例如:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import smtplib</span><br><span class="line">import os</span><br><span class="line">import sys</span><br></pre></td></tr></table></figure></p><h2 id="关于参数"><a href="#关于参数" class="headerlink" title="关于参数"></a>关于参数</h2><ul><li>不要用断言来实现静态类型检测<br>断言可以用于检查参数，但不应仅仅是进行静态类型检测。Python 是动态类型语言，静态类型检测违背了其设计思想。断言应该用于避免函数不被毫无意义的调用。</li><li>不要滥用 *args 和 **kwargs<br>*args 和 **kwargs 参数可能会破坏函数的健壮性。它们使签名变得模糊，而且代码常常开始在不应该的地方构建小的参数解析器。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><p>使用 has 或 is 前缀命名布尔元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is_connect = True</span><br><span class="line">has_member = False</span><br></pre></td></tr></table></figure></li><li><p>用复数形式命名序列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">members = [<span class="string">'user_1'</span>, <span class="string">'user_2'</span>]</span><br></pre></td></tr></table></figure></li><li><p>用显式名称命名字典</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person_address = &#123;<span class="string">'user_1'</span>:<span class="string">'10 road WD'</span>, <span class="string">'user_2'</span> : <span class="string">'20 street huafu'</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>避免通用名称<br>诸如 list, dict, sequence 或者 element 这样的名称应该避免。</p></li><li>避免现有名称<br>诸如 os, sys 这种系统已经存在的名称应该避免。</li></ul><h2 id="一些数字"><a href="#一些数字" class="headerlink" title="一些数字"></a>一些数字</h2><ul><li>一行列数 : PEP 8 规定为 79 列，这有些苛刻了。根据自己的情况，比如不要超过满屏时编辑器的显示列数。这样就可以在不动水平游标的情况下，方便的查看代码。</li><li>一个函数 : 不要超过 30 行代码, 即可显示在一个屏幕类，可以不使用垂直游标即可看到整个函数。</li><li>一个类 : 不要超过 200 行代码，不要有超过 10 个方法。</li><li>一个模块 不要超过 500 行。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;常量 : 大写加下划线&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;USER_CONSTANT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于不会发生改变的全局变量，使用大写加下划线。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="http://oje.pw/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda</title>
    <link href="http://oje.pw/2018/03/31/python-anaconda/"/>
    <id>http://oje.pw/2018/03/31/python-anaconda/</id>
    <published>2018-03-31T12:29:15.000Z</published>
    <updated>2018-04-01T00:20:21.915Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个名为python36的环境，指定Python版本是3.6<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create --name python36 python=3.6 <span class="comment"># conda会为我们自动寻找3.6.x中的最新版本</span></span><br></pre></td></tr></table></figure></p><a id="more"></a> <p>安装好后，使用activate激活某个环境<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ activate python36 <span class="comment"># for Windows</span></span><br><span class="line">$ <span class="built_in">source</span> activate python36 <span class="comment"># for Linux &amp; Mac</span></span><br></pre></td></tr></table></figure></p><p>查看当前版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python --version</span><br></pre></td></tr></table></figure></p><p>如果想返回默认的python 2.7环境，运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ deactivate python27 <span class="comment"># for Windows</span></span><br><span class="line">$ <span class="built_in">source</span> deactivate python27 <span class="comment"># for Linux &amp; Mac</span></span><br></pre></td></tr></table></figure></p><p>删除一个已有的环境<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda remove --name python34 --all</span><br></pre></td></tr></table></figure></p><p>添加Anaconda的TUNA镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br></pre></td></tr></table></figure></p><p>设置搜索时显示通道地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda config --<span class="built_in">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure></p><p>查看当前环境下已安装的包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda list</span><br></pre></td></tr></table></figure></p><p>查看某个指定环境的已安装包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda list -n python36</span><br></pre></td></tr></table></figure></p><p>查找package信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda search numpy</span><br></pre></td></tr></table></figure></p><p>安装package<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install -n python36 numpy <span class="comment"># 如果不用-n指定环境名称，则被安装在当前活跃环境</span></span><br></pre></td></tr></table></figure></p><p>更新package<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda update -n python36 numpy</span><br></pre></td></tr></table></figure></p><p>删除package<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda remove -n python36 numpy</span><br></pre></td></tr></table></figure></p><p>更新conda，保持conda最新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda update conda</span><br></pre></td></tr></table></figure></p><p>更新anaconda<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda update anaconda</span><br></pre></td></tr></table></figure></p><p>更新python<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda update python</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;创建一个名为python36的环境，指定Python版本是3.6&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ conda create --name python36 python=3.6 &lt;span class=&quot;comment&quot;&gt;# conda会为我们自动寻找3.6.x中的最新版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://oje.pw/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="http://oje.pw/tags/Python/"/>
    
  </entry>
  
</feed>
